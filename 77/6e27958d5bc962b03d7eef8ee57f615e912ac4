From: gavinandresen@gmail.com (Gavin Andresen)
Date: Sun, 29 Jan 2012 09:30:10 -0500
Subject: [Bitcoin-development] Fw: Quote on BIP 16
In-Reply-To: <1327835984.12365.YahooMailNeo@web121002.mail.ne1.yahoo.com>
References: <1327812740.41242.YahooMailNeo@web121002.mail.ne1.yahoo.com>
	<CAAS2fgRWJb+p=gM4eG_p4fr1+UsT-EO_YZOvkgh6SnktRRTyEw@mail.gmail.com>
	<1327835941.47827.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<1327835984.12365.YahooMailNeo@web121002.mail.ne1.yahoo.com>
Message-ID: <CABsx9T2A8f64mh2-uSKwrjj9aEo0Z=jHyETQ5J9cka9JwyJqJw@mail.gmail.com>

On Sun, Jan 29, 2012 at 6:19 AM, Amir Taaki <zgenjix at yahoo.com> wrote:

> (oops sorry greg- replied to you by mistake)
>
> That address he gives is 77 characters/bytes (same thing). What I'm asking
> is how can it be so small.


That's an alternative design for multisig addresses that would put a byte
giving the type of transaction and the 20-byte hashes of each of the public
keys involved. They would not have been redeemed using CHECKMULTISIG, but
would use DUP HASH160 CHECKSIG and the arithmetic or logical opcodes to
create the "m of n" condition.

Nobody really liked that solution because it means a new 'type' of bitcoin
address every time we want a new transaction type and long addresses.

Its only advantage is it didn't use CHECKMULTISIG, so there were no
problems with maximum-sigops-per-block.

-- 
--
Gavin Andresen
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120129/733b78ce/attachment.html>
