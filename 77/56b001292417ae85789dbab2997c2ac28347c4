From: rusty@rustcorp.com.au (Rusty Russell)
Date: Fri, 02 Oct 2015 10:52:14 +0930
Subject: [bitcoin-dev] Versionbits BIP (009) minor revision proposal.
In-Reply-To: <87bncjph6c.fsf@rustcorp.com.au>
References: <87zj04fxkw.fsf@rustcorp.com.au>
	<CAAS2fgTXP0j6K3sxp=HL9j2-xvO8y_VnpG+iZw9kaxmnxZQjSw@mail.gmail.com>
	<87bncjph6c.fsf@rustcorp.com.au>
Message-ID: <87d1wynjy1.fsf@rustcorp.com.au>

Rusty Russell via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
writes:
> Gregory Maxwell <gmaxwell at gmail.com> writes:
>> I can, however, argue it the other way (and probably have in the
>> past):  The bit is easily checked by thin clients, so thin clients
>> could use it to reject potentially ill-fated blocks from non-upgraded
>> miners post switch (which otherwise they couldn't reject without
>> inspecting the whole thing). This is an improvement over not forcing
>> the bit, and it's why I was previously in favor of the way the
>> versions were enforced.  But, experience has played out other ways,
>> and thin clients have not done anything useful with the version
>> numbers.
>>
>> A middle ground might be to require setting the bit for a period of
>> time after rule enforcing begins, but don't enforce the bit, just
>> enforce validity of the block under new rules.  Thus a thin client
>> could treat these blocks with increased skepticism.
>
> Introducing this later would trigger warnings on older clients, who
> would consider the bit to represent a new soft fork :(

Actually, this isn't a decisive argument, since we can use the current
mechanism to upgrade versionbits, or as Eric says, tack it on to
an existing soft fork.

So, I think I'm back where I started.  We leave this for now.

There was no nak on the "keep setting bit until activation" proposal, so
I'm opening a PullReq for that now:

	https://github.com/bitcoin/bips/pull/209

Cheers,
Rusty.
