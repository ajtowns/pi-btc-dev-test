From: laanwj@gmail.com (Wladimir J. van der Laan)
Date: Thu, 19 Mar 2015 21:08:25 +0100
Subject: [Bitcoin-development] Improving resistance to transaction
 origination harvesting
In-Reply-To: <550855A2.4080902@monetas.net>
References: <550855A2.4080902@monetas.net>
Message-ID: <20150319200824.GB31182@amethyst.visucore.com>

On Tue, Mar 17, 2015 at 11:26:10AM -0500, Justus Ranvier wrote:
> 
> Allow Bitcoin nodes to create authenticated connections with trusted
> peers via CurveCP [2]. Nodes that have at least one CurveCP peer only
> broadcast their transactions to those peers.

The user would have to select trusted peers or rely on a web of trust to
pick them. Experience with other networks such as Retroshare shows that
not only this is a lot of work to use, mistakes are easily made. It
will only protect the privacy of those that know what they're
doing and who they're trusting.

Otherwise, paradoxally this could reduce privacy, as the trusted peers
necessarily know (part of) your identity to be able to exchange keys
out-of-band. 
(and in practice most people are easily tricked into adding someone as
'friend', for Retroshare here is a case in which a law firm did this and
thus could sue people for making files available...)

> Use of CurveCP requires both sides of the connection to know each
> other's long term public key. This key can be packaged in a structure
> similar in concept to a Freenet node reference.

Right.

> Users who wish to set up a secure connection between their nodes would
> first use an API command to generate their node references, exchange
> these files, and copy them to the ~/.bitcoin/curvecp directory with a
> .ref extension. The node only accepts CurveCP connections from, and
> attempts CurveCP connection to, peers whose references are present in
> that directory.

Indeed, if the goal is to make a secure connections between nodes that
know and trust each other, this could employ any kind of tunnelling on top
of the P2P protocol. CurveCP would be one option. 

As said I'm not convinced this will help with privacy, but this could be
used for whitelisting: trusted nodes could be subjected to fewer DoS
constraints.

> Relationship with Tor:
> 
> This proposal would work along with, or independently of Tor usage.
> 
> The same network monitoring techniques which can track an originating
> transaction to a particular IP address could do the same thing for a
> node which is listening as a hidden service, and any technique for
> deanonymising hidden services could then identify the point of origin.

Seperating the transaction submission from normal node functionality
would already go a long way, and that can be done without any protocol
changes. The transaction submitter would connect to a few nodes
through Tor and drop off a transaction, then disconnect. It would not
advertise itself as the hidden service, and should also use a different
Tor circuit as the node connections.

This could even work if the normal node functionality does not go
through Tor - although then one'd have to be even more careful about
any kind of residual fingerprinting or timing attacks.

Wladimir



