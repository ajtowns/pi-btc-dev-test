From: pete@petertodd.org (Peter Todd)
Date: Fri, 20 May 2016 04:45:35 -0400
Subject: [bitcoin-dev] Making UTXO Set Growth Irrelevant With
 Low-Latency Delayed TXO Commitments
In-Reply-To: <CANN4kmcGE0_B7cDh1kpXzefuF-4y6z3=ZqmwcgQ0KEVhjA92WQ@mail.gmail.com>
References: <20160517132311.GA21656@fedora-21-dvm>
	<CANN4kmcGE0_B7cDh1kpXzefuF-4y6z3=ZqmwcgQ0KEVhjA92WQ@mail.gmail.com>
Message-ID: <20160520084535.GA5445@fedora-21-dvm>

On Thu, May 19, 2016 at 04:23:28PM -0600, Nick ODell wrote:
> What if two people create transactions from oupoints  within the same MMR
> tree tip, at the same time?
> 
> For example, I create transaction A plus an MMR proof that MMR tip X will
> become Y.
> 
> On the other side of the planet, someone else creates transaction B, plus
> an MMR proof that tip X will become Z.
> 
> Can a miner who receives A and B put both into a block, without access to
> the outputs that were pruned?

The MMR proofs provided by transactions aren't proofs of *how* the MMR should
be be changd; they're just proofs that the MMR is in a certain state right now.
You're situation is just an example of a double-spend, that miners have to
detect if they don't want to create invalid blocks. Specifically, if I
understand your example correctly, they'd be rejected by the STXO set.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20160520/e23f355a/attachment.sig>
