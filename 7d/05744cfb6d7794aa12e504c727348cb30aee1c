From: jameson.lopp@gmail.com (Jameson Lopp)
Date: Wed, 07 May 2014 16:00:44 -0400
Subject: [Bitcoin-development] Announcing the Statoshi fork
In-Reply-To: <CANEZrP1A0z0sVBHzW_2Z1RJ6STX9G1RW_KncbY_yN7NuTL8BZw@mail.gmail.com>
References: <536A8592.8010009@gmail.com>
	<CANEZrP1A0z0sVBHzW_2Z1RJ6STX9G1RW_KncbY_yN7NuTL8BZw@mail.gmail.com>
Message-ID: <536A90EC.3000205@gmail.com>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

I completely agree that this setup is far too difficult to reasonably expect anyone to implement it. You're correct that we could run a single StatsD daemon and have quite a few nodes sending statistics to it - this is really what StatsD was designed for - sampling small amounts of stats from high volume systems. There would be an issue of trust, however - StatsD was also only really designed to be run inside of highly secure infrastructure where you trust all of the machines that are talking to it.

- - Jameson

On 05/07/2014 03:50 PM, Mike Hearn wrote:
> Really nice! We definitely need to put together a team who really cares
> about the operations side of the network and this is a fantastic start.
> 
> It'd be nice if you didn't assume knowledge of what statsd is out of the
> box. Given the name I'd assumed it was a small UNIX daemon but it seems
> it's actually a Javascript thingy?
> 
> It looks like putting together a monitored bitcoind setup can be quite a
> lot of work. I wonder if there are ways to simplify it. For example, would
> it make sense for someone to run a community statsd and graphite instance,
> so we can get aggregate statistics across many nodes and the node operators
> don't have to set everything up themselves? Does that make any sense?
> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1.4.14 (GNU/Linux)
Comment: Using GnuPG with Thunderbird - http://www.enigmail.net/

iQEcBAEBAgAGBQJTapDsAAoJEIch3FSFNiDcqNMIAKbliLXVJ+CovCB+etqwCYfD
oTs0uxEIZvnGSzqn6i3z4tgzF7kbnpVThiHpG2MO2BytasGzfr+FsDLFpvkkvx0Q
yffa1J5uB5QhY/POwg6GCN4DEmy8tbd+I5rSTKg1m/JuXZV2B4TFgr6GF+t+gBNT
O2TTIngcl77XbGDF2XKOZSAHaIFx2KjdZNg5lfInVxDeA1dDzlU/vmEB37fx80EH
IzD7FTllLp5qhlwYxaQTVxXmbjy+pXbtArYsVSRgoscgJI3DDKpxQj3uzjxouEHv
27QkhuS2dzFioQhLPcnz/PtcCkE1l0aDNf6n7OiJ3lGygQ0+AKZHpyuvFujpSY8=
=QCYI
-----END PGP SIGNATURE-----


