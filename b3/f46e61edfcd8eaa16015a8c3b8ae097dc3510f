From: rick@support-intelligence.com (Rick Wesson)
Date: Sat, 30 Jul 2011 07:06:28 -0700
Subject: [Bitcoin-development] Seeking advice: Encouraging bug-fixing
 over new features
In-Reply-To: <CANEZrP00+5GSPqoKmZgCw1huYNEuidjWgKGDdF-LG-zTaV8xXg@mail.gmail.com>
References: <CABsx9T3W=n6VVJfOUqcd52oYvd-5hSwdOJudtVHK4g0bPGpXew@mail.gmail.com>
	<CANEZrP00+5GSPqoKmZgCw1huYNEuidjWgKGDdF-LG-zTaV8xXg@mail.gmail.com>
Message-ID: <CAJ1JLttSv5RgKAfhOK-4k341NDuA+j4bsPgPWtO2Lxky6--e1w@mail.gmail.com>

+1

Putting a bounty on the test framework might put some loose change to work.

http://code.google.com/p/googletest/ would be my choice

the list of c++ frameworks is at
http://en.wikipedia.org/wiki/List_of_unit_testing_frameworks#C.2B.2B

-rick

On Sat, Jul 30, 2011 at 4:49 AM, Mike Hearn <mike at plan99.net> wrote:
> I've worked on open source projects for over 10 years now. This
> dynamic always exists but I've never seen it seriously kill a project.
>
> Thoughts:
>
> ?- People who start out with features often stick around and become
> core contributors.
> ?- Unit tests are critical.
>
> Now there's a basic skeleton for unit tests, the bug debt can start to
> be paid down by insisting that anyone who touches a piece of code
> introduces tests, whether it be for new features or refactorings.
> Insist patches won't be accepted without some new tests. In an
> untested codebase, adding or improving tests often reveals other bugs
> that then get fixed at the same time.
>
> People usually don't want to write tests if there's nothing there
> already. So I'd suggest seeding the test suite with a small number of
> simple tests for each part (wallet, net, db, etc). Once there are a
> few tests already it's easier to get people to add more. It's tempting
> to say, well, the wallet or re-org handling or whatever is the most
> critical so we'll write lots of tests for that first and do the rest
> later, but that's not as conducive to getting people to help.
>
> Most complex projects need some unit testing infrastructure to assist.
> For instance, the ability to use mock network connections or minimal
> difficulty chains. So if you build up that infrastructure and plant
> those seeds, it'll be easier for other people to flesh it out.
>
> Final thought - big test suites take a long time to grow, especially
> in codebases developed without them. A good start is a manually
> written test plan, that just walks you through the apps features.
> Insisting that a patch be signed off as passing the test plan is a
> good way to avoid gigantic breakages like the wallet encryption bug
> from cold start, at the cost of slowing down development (nobody likes
> doing manual test work over and over).
>
> I don't always follow my own advice on this and usually end up
> regretting it ....
>
> ------------------------------------------------------------------------------
> Got Input? ? Slashdot Needs You.
> Take our quick survey online. ?Come on, we don't ask for help often.
> Plus, you'll get a chance to win $100 to spend on ThinkGeek.
> http://p.sf.net/sfu/slashdot-survey
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>


