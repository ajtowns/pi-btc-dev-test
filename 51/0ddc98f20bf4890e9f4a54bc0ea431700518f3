From: bitcoin-list@bluematt.me (Matt Corallo)
Date: Tue, 31 Jul 2012 16:39:45 +0200
Subject: [Bitcoin-development] script tests - invalid script in
 script_valid.json?
In-Reply-To: <CABsx9T016OmU2qU1a67=YmpA4VDbzrddOamc8=Mt6x7BhVO1Uw@mail.gmail.com>
References: <1343579466.30862.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<501565D5.4060608@justmoon.de>
	<1343580154.34128.YahooMailNeo@web121004.mail.ne1.yahoo.com>
	<50157450.8070806@justmoon.de>
	<CABsx9T016OmU2qU1a67=YmpA4VDbzrddOamc8=Mt6x7BhVO1Uw@mail.gmail.com>
Message-ID: <1343745585.3416.3.camel@bmthinkpad.lan.bluematt.me>

On Sun, 2012-07-29 at 20:52 -0400, Gavin Andresen wrote:
> > Is there interest to port more tests (P2SH, checksig, checkmultisig,
> > block verification, maybe even DoS rules) into data-driven format? It
> > might be something that I'd like to help with if pull requests in that
> > direction are welcome.
> 
> Yes, more tests are definitely welcome.
> 
> check*sig tests are tricky, because they have to refer to previous
> unspent transactions and private keys (so require a particular block
> chain to test against). Brilliant ideas on a simple data-driven format
> welcome.
> 
> block verification tests would be great; a collection of good/bad
> block chains, starting from a common chain (maybe the testnet3
> tesnet-in-a-box chain) would be very useful for regression testing.
> 

I wrote a simple block chain tester (that is capable of forking,
checking invalid blocks, etc) as a part of the bitcoinj test suite.  Its
more targeted at testing bitcoinj directly and keeping the bitcoinj test
suite light weight, so if it were to be more generic some tweaks could
be done (not requiring tweaking the minimum difficulty/genesis block
hash/etc would be first).  It doesn't have that many test cases yet, but
it is capable of sanity-testing reorgs/etc.  Its mostly the first two
commits listed at
http://code.google.com/r/bluemattme-bitcoinj/source/list?name=fullverif

Matt



