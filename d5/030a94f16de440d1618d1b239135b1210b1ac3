From: andyparkins@gmail.com (Andy Parkins)
Date: Fri, 5 Aug 2011 12:58:25 +0100
Subject: [Bitcoin-development] Double spend detection to speed up
	transaction trust
In-Reply-To: <CANEZrP1QVdOdttOk4_kzoHkVf_KYRzVFyBEpOFvi+L_DLd=74A@mail.gmail.com>
References: <201108041423.14176.andyparkins@gmail.com>
	<4E3B35E7.1010409@justmoon.de>
	<CANEZrP1QVdOdttOk4_kzoHkVf_KYRzVFyBEpOFvi+L_DLd=74A@mail.gmail.com>
Message-ID: <201108051258.25813.andyparkins@gmail.com>

On 2011 August 05 Friday, Mike Hearn wrote:

> How many connections "should" a node use? We faced this decision in
> BitCoinJ recently and I asked the patch writer to reduce the number.
> It seems pretty arbitrary to me - if you aren't going to relay, a
> single connection should be good enough. Yes, it makes sybil easier,
> but if you pick the one node randomly enough it might be ok?

I don't really see that "number of connections" is the relevant metric.  For a 
well designed bit of software the number of connections shouldn't matter.  
There's a bit of overhead in the operating system per connection, but I'd be 
surprised if that ever became a limiting factor in a stateless system like 
bitcoin.  In fact, bitcoin would work perfectly well as a UDP system (I'm not 
advocating that of course), and then there would be no such thing as a 
connection.

Bandwidth is the measure that's relevant.

Therefore if bandwidth is the measure, just pick a bandwidth you like and 
add/accept connections until you hit that bandwidth limit (probably averaged).  
This has the advantage that it can be measured automatically, or sensibly set 
by a user.


Andy

-- 
Dr Andy Parkins
andyparkins at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20110805/4090edad/attachment.sig>
