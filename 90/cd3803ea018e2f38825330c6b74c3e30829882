From: pete@petertodd.org (Peter Todd)
Date: Mon, 4 Nov 2013 12:36:44 -0500
Subject: [Bitcoin-development] Auto-generated miner backbone
In-Reply-To: <CANEZrP0pUvyP62NKu2hdzFYxaMdD7iPPmkL699-gZksZa=HHzg@mail.gmail.com>
References: <CANEZrP3iYBdg3p7Ru4O-UENY_yyQDA8=9PGn=KDKGGTrZ-xkRw@mail.gmail.com>
	<20131104142621.GA2190@petertodd.org>
	<CANEZrP0pUvyP62NKu2hdzFYxaMdD7iPPmkL699-gZksZa=HHzg@mail.gmail.com>
Message-ID: <20131104173644.GA3447@petertodd.org>

On Mon, Nov 04, 2013 at 04:27:58PM +0100, Mike Hearn wrote:
> > The correct, and rational, approach for a miner is to always mine to
> > extend the block that the majority of hashing power is trying to extend.
> >
> 
> There's no stable way to know that. The whole purpose of the block chain to
> establish the majority. I think your near-miss headers solution is
> circular/unstable for that reason, it's essentially a recursive solution.
> 
> 
> > Mining strategy is now to mine to extend the first block you see, on the
> > assumption that the earlier one probably propagated to a large portion
> > of the total hashing power. But as you receive "near-blocks" that are
> > under the PoW target, use them to estimate the hashing power on each
> > fork, and if it looks like you are not on the majority side, switch.
> >
> 
> But you can't reliably estimate that. You can't even reliably estimate the
> speed of the overall network especially not on a short term basis like a
> block interval.

Re-read my proposal - the whole point of it is to give a way to quickly
come to consensus about which side of the fork has the majority of
hashing power. It doesn't, and doesn't need to, reliable determine what
the hashing power actually is on either side. Rather it's a feedback
mechanism that creates a clear majority consensus in a short amount of
time with the use of only a small amount of bandwidth. (~5KB/10minutes)

-- 
'peter'[:-1]@petertodd.org
00000000000000079c8a642234cb452cbe261fcdb5885af604471c458c257956
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20131104/0402f7f4/attachment.sig>
