From: mike@plan99.net (Mike Hearn)
Date: Wed, 12 Mar 2014 10:48:01 +0100
Subject: [Bitcoin-development] Multisign payment protocol?
In-Reply-To: <9A6499BC-E546-45CC-A7EF-5182FC86052D@gmail.com>
References: <CANAnSg3Bt0e7CfUcJXe96xhU6nqif9ey_vurZMZkSa9OHjHStw@mail.gmail.com>	<CABsx9T0SMi6Gp4JY=CpHxLEu5pVkvDmnug7PsY7m_dvtT7khzg@mail.gmail.com>	<531DFDF8.80008@gmail.com>	<531E52FE.5090107@jerviss.org>	<531E5454.1030601@gmail.com>	<CAJHLa0NZkzQQvMxgCJAJGT=Yn6vrVNK8Bg7RAfAjctpnrfg5zA@mail.gmail.com>	<CABsx9T3eViYDsEmLm7ceimJNwci3mCOxWoVnVZHrqp7pDmm0+g@mail.gmail.com>	<CANAnSg2kzPF0886PsQW8chzsWi6Urp+=-x+9bbv8Mv6hmpvBPw@mail.gmail.com>	<CAJHLa0Mu2kiv3CCme7BPwzWtT++PNLQ2aAKdLyA8LFTtXEg9fg@mail.gmail.com>	<CABsx9T0Lvg84qFVRbc7Ef4vZEQj9eO7Jhup5PTRLLeuJFvXi-w@mail.gmail.com>	<4fca6b510dd57d2f92affeb988d2ee5d.squirrel@fulvetta.riseup.net>	<531FAA55.2020108@xeno-genesis.com>
	<531FC808.7060709@gmail.com>
	<9A6499BC-E546-45CC-A7EF-5182FC86052D@gmail.com>
Message-ID: <53202D51.8010008@plan99.net>

Good to see so much activity! But please do remember, there's more to 
"multisig" than just keys - you need the whole user experience to be 
planned out and specced for fully interoperable implementations.

For the "group account for an organisation" feature, you don't really 
want to expose end users to the notion of a key. Historically this has 
just led to confusion (and an ugly visual explosion of padlocks and 
small metal objects :) It'd be much better for the UI to be designed in 
terms of people, perhaps with a bit of social network integration to 
avoid having to set up profiles, and then a "group spend" feature would 
behind the scenes rendezvous with the others and swap signatures around, 
etc.  So for interop, you'd need to define all the rendezvous protocols 
as well.
> CoinVault is also using a partially signed transaction format whereby 
> 0-length placeholders are used for missing signatures in the 
> transaction scripts.
I don't know how you are implementing this/what framework you're using, 
but I suggest using placeholders that are the length of an actual 
expected signature, at least when forming the transaction. This is what 
bitcoinj will do because otherwise you could end up miscalculating the 
fee, which is based on the final size. See TransactionSignature.dummy() 
<http://plan99.net/%7Emike/bitcoinj/0.11/com/google/bitcoin/crypto/TransactionSignature.html#dummy%28%29> 
in the API.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140312/257756f4/attachment.html>
-------------- next part --------------
A non-text attachment was scrubbed...
Name: smime.p7s
Type: application/pkcs7-signature
Size: 5971 bytes
Desc: S/MIME Cryptographic Signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140312/257756f4/attachment.p7s>
