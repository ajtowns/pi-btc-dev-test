From: s7r@sky-ip.org (s7r)
Date: Thu, 27 Aug 2015 12:33:16 +0300
Subject: [bitcoin-dev] BIPS proposal for implementing AML-KYC in bitcoin
In-Reply-To: <55DEC710.4090603@gmail.com>
References: <CALoZ_LG7POrwNqtG9prvG_1T3+OcWNo9cKbiwHDu9xP85zqOEA@mail.gmail.com>
	<55DEC710.4090603@gmail.com>
Message-ID: <55DED95C.9090303@sky-ip.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256

Hello,

Please stop with the nonsense. Bitcoin is a decentralized payment
network. It operates globally, so neither jurisdiction can apply to it
and have effects. It is the sole responsibility of all the
users/businesses involved in Bitcoin to comply with their local
regulations while using Bitcoin. Trying to somehow standardize this
compliance at the backbone network level will be impossible in the
first place, and even if it was possible it would be a _huge_ mistake.

The word 'Bitcoin' already rings a bell in most places of the world
where there is a reasonable level of technology available. It is
powerful and we should continue the work to improve it. No law
enforcement authority or govt. branch is asking more than for
users/businesses to comply with the regulations that bind to them.
Someone in Belize for example does not have same compliance requests
with someone in Germany - which is why this is not even a subject to
be discussed on bicoin-dev mailing list. It is unique/custom for each
user/business, the requirements depending on their jurisdiction.

On 8/27/2015 11:15 AM, Patrick Strateman via bitcoin-dev wrote:
> Are you aware of the prior work in this field?
> 
> https://www.reddit.com/r/Bitcoin/comments/1qmbtu/mike_hearn_chair_of_the_bitcoin_foundations_law/
>
>  On 08/27/2015 01:10 AM, prabhat via bitcoin-dev wrote:
>> Hi,
>> 
>> I am proposing to create a AML-KYC module to control the network
>> and also qualify use cases in OFAC compliant way. Here is the
>> attached doc.
>> 
>> Please provide your feedback and suggestions.
>> 
>> Best, Prabhat Kumar Singh
>> 
>> 
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v2.0.22 (MingW32)

iQEcBAEBCAAGBQJV3tlbAAoJEIN/pSyBJlsR438H/Aw6PCjPxLGuxdlDVmqQG4Lz
a95OVm8KqEfbiRGc1lYjBhh3JjXoUBuZKUgbnve6oFOBdNpmtm/OCJpCBQqaLDnT
Ksao1aM42c+1RdiLRhd3QjoDHyfRpNnE+XQ4lk+H0nMlroRos1K5Dpnmiea15yMQ
1mxvnKyW5mIRu11Z/6xEJ3tX8VoAk3G2MtYf0SRkfJjbdRai1JIL/4w/JJJnkS1L
klMYPQeHOolIaSgXfy/oCGgqDLVKi3utkDZuIqLe8Pg0OoQFOnn4k3vDdQ/U0N5z
r7rzvriXBlCaZttNi8MkLujP3ugcTAjLxzntS68vXIRwSy+VzrASYdDd6vXGR4U=
=61p4
-----END PGP SIGNATURE-----
