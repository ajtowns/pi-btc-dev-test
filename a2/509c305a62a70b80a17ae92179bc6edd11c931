From: dev@jonasschnelli.ch (Jonas Schnelli)
Date: Sat, 14 May 2016 10:16:42 +0200
Subject: [bitcoin-dev] Bip44 extension for P2SH/P2WSH/...
In-Reply-To: <CACq0ZD7BUaMnRgpx0ZxZu1Ok5weiJ9tbZnyFpXEHsTi==V_t_w@mail.gmail.com>
References: <5735D3A4.7090608@mycelium.com> <5735EC17.5040901@satoshilabs.com>
	<CACq0ZD4BvvCryYmO-J9Rof-ogQJ1wNLgmUEU596nuTH=-U8Hag@mail.gmail.com>
	<5735FC99.5090001@satoshilabs.com>
	<CACq0ZD7mLCaoGpcVEp7NfW=6nsEA39tZp+G8oeySygMEyhuwQA@mail.gmail.com>
	<57361577.7060207@satoshilabs.com>
	<CACq0ZD7BUaMnRgpx0ZxZu1Ok5weiJ9tbZnyFpXEHsTi==V_t_w@mail.gmail.com>
Message-ID: <5736DEEA.5030603@jonasschnelli.ch>

Hi

> That's a valid concern, but I don't see the conflict here. In order to
> recover funds from a wallet conforming to BIPXX, you must have wallet
> software that handles BIPXX. Simply making BIPXX backwards compatible
> with previously created BIP44 or BIP43 purpose 0 wallets doesn't change
> this at all.

Maybe I'm going a bit offtopic. Sorry for that.

Importing a bip32 wallet (bip44 or not) is still an expert job IMO.
Also importing can lead to bad security practice (especially without a
sweep).

Users will send around xpriv or import an seed over a compromised
computer to a cold storage, etc.

I don't think users want to import private keys.
They probably want to import the transaction history and send all funds
covered by that seed to a new wallet.

I often though that task is better covered by a little GUI tool or
cli-app/script:
-> Accept different bip32 schematics (bip32 native, bip44, etc.)
-> Accept different bip39 (like) implementation
-> Create large lookup windows
-> Create a sweep transaction to a new address/wallet and sign/broadcast it.
-> Export transaction history (CSV)

But maybe I'm over-complicating things.

--
</jonas>

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 819 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20160514/fb88c8d0/attachment.sig>
