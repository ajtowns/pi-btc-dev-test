From: ZmnSCPxj@protonmail.com (ZmnSCPxj)
Date: Wed, 31 May 2017 23:42:21 -0400
Subject: [bitcoin-dev] [Lightning-dev] [RFC] Lightning invoice/payment
	format draft
In-Reply-To: <874lw0h4y3.fsf@rustcorp.com.au>
References: <874lw0h4y3.fsf@rustcorp.com.au>
Message-ID: <LgBEZTIwZietTZKmz1eNigHGsoFPyrPFmGjxfpYuYqktbwXo6doj_Wfbsb9OGQ5VY1s-eTcBtJQ-qRUxTyRvZD3SPA2LkXbsVsZQ0xUiork=@protonmail.com>

Good morning Rusty,

The fact that amount is optional, and the separator character between human-readable and data is the character "1", may mean some trouble with parsing of the optional amount.

Currently, the version is 0, which translates to the character "q" appearing after "1". So 1q is obviously not an amount and is known to start the data part.

However, what happens when we decide to upgrade, and version is now 1, translating to character "p"?

If version 1 of invoice is avalialble, does a payment starting with lnbc1p .... indicate a 1 pico-bitcoin payment, or an arbitrary payment to a version-1 data part?

Or is amount not allowed to have character "1"? It seems a strange limitation if we impose this...

Or do I mistake my understanding of bech32?

Alternatively we can just fix the first 5 bits to be 0 (so "1q" is an unambiguous separator between human-readable and data parts) and provide the version by other means, such as changing lnbc to ln2bc or so on...

> simply reused here even though its 6-character checksum is optimized
> for human errors, which are unlikely given the length of lightning
> invoices.

At first read, this seems wrong. My understanding is that lightning invoices are longer than segwit addresses in bech32, so human error is more likely.

Of course, it seems that the intended meaning is really "lightning invoices are so long that it is unlikely humans will enter it by hand, so human errors are unlikely compared to QR reader errors etc." so perhaps better reworded as such.

Regards,
ZmnSCPxj
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170531/80a1f0d2/attachment.html>
