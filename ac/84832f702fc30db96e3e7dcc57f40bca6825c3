From: rusty@rustcorp.com.au (Rusty Russell)
Date: Fri, 09 Oct 2015 12:08:06 +1030
Subject: [bitcoin-dev] CHECKSEQUENCEVERIFY - We need more usecases to
	motivate the change
In-Reply-To: <20151008174120.GA9291@muck>
References: <20151003143056.GA27942@muck> <87lhbgn4fa.fsf@rustcorp.com.au>
	<20151008174120.GA9291@muck>
Message-ID: <87pp0okeip.fsf@rustcorp.com.au>

Peter Todd <pete at petertodd.org> writes:
> On Tue, Oct 06, 2015 at 12:28:49PM +1030, Rusty Russell wrote:
>> Peter Todd via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
>> writes:
>> > However I don't think we've done a good job showing why we need to
>> > implement this feature via nSequence.
>> 
>> It could be implemented in other ways, but nSequence is the neatest and
>> most straightforward I've seen.
>> 
>> - I'm not aware of any other (even vague) proposal for its use?  Enlighten?
>
> There's three that immediately come to mind:
>
> Gregory Maxwell has proposed it as a way of discouraging miners from
> reorging chains, by including some of the low-order bits of a previous
> block header in nSequence.
>
> A few people have proposed implementing proof-of-stake blocksize voting
> with nSequence.

Excellent, thanks!  It's good to have such ideas as a compass.  PoS
voting seems like it won't be a problem in 5 bits.

The "prevbits" idea would want more bits; naively 64 would be good, but
I think there are some tricks we can use to make 32 work OK.  We would
have to then split between nLocktime (if available) and multiple
nSequence fields, and it would weaken it for some txs.

There is one easy solution: change the BIP wording from:

-For transactions with an nVersion of 2 or greater,
+For transactions with an nVersion of 2, 

And on every tx bump, we decide whether to keep this scheme (mempool
would enforce it always).

Cheers,
Rusty.
