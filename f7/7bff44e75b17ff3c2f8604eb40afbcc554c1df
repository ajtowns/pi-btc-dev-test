From: andreas@schildbach.de (Andreas Schildbach)
Date: Sun, 26 Jan 2014 22:11:47 +0100
Subject: [Bitcoin-development] BIP70/71 issue, RFD
Message-ID: <lc3tm6$9ko$1@ger.gmane.org>

I'm experimenting with BIP70/71 (payment protocol) usage in face to face
payments (more on that soon).

I've excountered an issue with the protobuf format. Protobufs are not
self-delimiting. That means if you're reading from an undelimited
stream, you will read endlessly because you don't know how much to read.

The current BIP70 implementations probably work because they're reading
either from a file or from an HTTP resource which sets the
Content-Length header. Trouble is the Content-Length header is optional,
and also there are many kinds of streams that don't have this built-in
delimiting mechanism.

The Java protobuf API solves this by offering delimited I/O, like

payment.writeDelimitedTo(os);

This writes the size of the message as a varint before writing the data.
I don't know about protobuf implementations for other languages but I'd
expect them to offer something compatible.

However, this leading varint is an incompatible change and would need to
be added to the spec.

I specifically encountered this with PaymentMessage and PaymentACK, but
it might be a good idea to apply this to all messages if any. Open for
discussion.



