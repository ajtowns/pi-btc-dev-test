From: luke@dashjr.org (Luke-Jr)
Date: Tue, 4 Oct 2011 01:15:09 -0400
Subject: [Bitcoin-development] [RFCs] 13 new branches
Message-ID: <201110040115.11613.luke@dashjr.org>

These branches are NOT ready for merging to mainline, but need peer review.

Branches can be viewed at:
    http://luke.dashjr.org/programs/bitcoin/w/bitcoind/luke-jr.git/heads

git pull git://gitorious.org/~Luke-Jr/bitcoin/luke-jr-bitcoin.git <branchname>

=

my_free_txn: accept the user's own transactions regardless of fees or
             standardness; put credits-to-user toward covering fees required

    Common-sense, really.

=

accept_nonstdtxn: adds a -acceptnonstdtxn option to allow miners to easily
                  accept "non-standard" transactions

    We probably want to amend this with a block for OP_NOP*?

=

free_relay: relay transactions regardless of fees

=

optimize_cache_rpcauth: cache RPC username and password

    Part of JoelKatz's diffN patches for a while, seems fairly well-tested on
    (other) pools

=

optimize_conn_adjtime: cache AdjustedTime around a for loop

    Another part of JoelKatz's diff4 patch.

=

optimize_ToHex: faster binary-to-hexadecimal-string function

=

optimize_DecodeBase64: faster base64 decoding

=

optimize_remove_CheckWork_delay: remove 2 second delay from CheckWork

    I don't know why this is here, but apparently most pools work fine without
    it? (from JoelKatz)

=

optimize_FastGetWork: optimizations for the common case of getwork

    Yet another JoelKatz patch. His patch has it bundled tightly with the
    ToHex branch, so once one is merged, the other will need rebasing.

=

optimize_http_status: use C instead of C++ for HTTP status reply strings

=

rpcclient_conn_close: "Connection: close" header in client mode

=

threaded_rpc: use a new thread for each JSON-RPC connection, with mutexes
              preventing actual methods from being executed concurrently
              (except for parts of getwork)

    Tested on Eligius from day 1, under older versions. A few months ago, the
    code was merged with some of JoelKatz's patch, making it stable with SSL
    support.

=

rpc_keepalive: support for HTTP 1.1 keep-alive

    Depends on threaded_rpc.


