From: jan@uos.de (Jan Vornberger)
Date: Thu, 27 Oct 2011 15:37:43 +0200 (CEST)
Subject: [Bitcoin-development] Determine input addresses of a transaction
In-Reply-To: <CABsx9T2v4uhUdsWEg58Xs2OhOf3ED0Q2LGmkrRpdJDxvVMexdQ@mail.gmail.com>
References: <44861.134.106.52.172.1319444997.squirrel@webmail.uni-osnabrueck.de>
	<CABsx9T2v4uhUdsWEg58Xs2OhOf3ED0Q2LGmkrRpdJDxvVMexdQ@mail.gmail.com>
Message-ID: <55928.134.106.52.172.1319722663.squirrel@webmail.uni-osnabrueck.de>

Am Mo, 24.10.2011, 16:55, schrieb Gavin Andresen:
> Green addresses could be implemented as a second signature in the
> scriptSig.  You'd have to hack your bitcoin client, but you could
> generate a transaction that had <greensig> <sig> <pubKey>  ... as the
> input instead of <sig> <pubKey>.
>
> The <greensig> will be ignored by old clients.  The transactions is
> still considered 'standard'.  But you could teach bitcoin to look for
> <greensig> signatures in wallet transactions...

I played around with this a little bit and managed to generate such
transactions. However, I ran into the problem that IsStandard() also
checks that the size of scriptSig is not above 200. Adding an extra
signature there triggers this limit. I guess there is no way around
that?

Regards,
Jan


