From: joseph@lightning.network (Joseph Poon)
Date: Thu, 25 Feb 2016 18:02:26 -0800
Subject: [bitcoin-dev] SIGHASH_NOINPUT in Segregated Witness
In-Reply-To: <CABaSBayZ3+UjuzMSuOypiMzB7_5iE3ssD6Pfu3oA0Nnm5tWMPw@mail.gmail.com>
References: <20160226010746.GB10295@lightning.network>
	<CABaSBayZ3+UjuzMSuOypiMzB7_5iE3ssD6Pfu3oA0Nnm5tWMPw@mail.gmail.com>
Message-ID: <20160226020226.GA25101@lightning.network>

Hi Bryan,

On Thu, Feb 25, 2016 at 07:34:24PM -0600, Bryan Bishop wrote:
> Well if you are bothering to draft up a BIP about that SIGHASH flag,
> then perhaps also consider some other SIGHASH flag types as well while
> you are at it?

I'll take a look at those proposals when drafting the BIP. I think for
LN, there is a single clean way to achieve outsourcability, but may be
compatible with other arrangements. I'm somewhat averse to proposing too
much flexibility before there's clear use-cases, though. However, if
others do have uses/examples for other sighash flags, I'd be very
interested while drafting this BIP!

> FWIW there was some concern about replay using SIGHAHS_NOINPUT or something:
> http://gnusha.org/bitcoin-wizards/2015-04-07.log

Yeah, I think the nice thing about SegWit is that you resolve
malleability without worrying about replay attacks in the event of key
reuse. That's why I think it's only safe to do this new sighash type
inside segwit itself -- if you only wanted protection against
malleability you'd use segwit, and not touch this new sighash type
(you'd only use the new sighash flag if you actually need its features).

-- 
Joseph Poon
