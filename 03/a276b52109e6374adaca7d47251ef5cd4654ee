From: roconnor@blockstream.io (Russell O'Connor)
Date: Thu, 2 Nov 2017 21:10:42 -0400
Subject: [bitcoin-dev] Simplicity proposal - Jets?
In-Reply-To: <052D6E20-7194-4645-B628-1B7B7FECF330@gmail.com>
References: <mailman.5469.1509483670.27509.bitcoin-dev@lists.linuxfoundation.org>
	<052D6E20-7194-4645-B628-1B7B7FECF330@gmail.com>
Message-ID: <CAMZUoKk+8MFLywQB3jQFkk7BYZ4Rw3Paj=ErQe8pZ0beGwu0RA@mail.gmail.com>

Hi Jose,

Jets are briefly discussed in section 3.4 of
https://blockstream.com/simplicity.pdf

The idea is that we can recognize some set of popular Simplicity
expressions, and when the Simplicity interpreter encounters one of these
expressions it can skip over the Simplicity interpreter and instead
directly evaluate the function using specialized C or assembly code.

For example, when the Simplicity interpreter encounters the Simplicity
expression for ECDSA verification, it might directly call into libsecp
rather than continuing the ECDSA verification using interpreted Simplicity.

HTH.


On Nov 2, 2017 18:35, "JOSE FEMENIAS CA?UELO via bitcoin-dev" <
bitcoin-dev at lists.linuxfoundation.org> wrote:

Hi,

I am trying to follow this Simplicity proposal and I am seeing all over
references to ?jets?, but I haven?t been able to find any good reference to
it.
Can anyone give me a brief explanation and or a link pointing to this
feature?
Thanks

On 31 Oct 2017, at 22:01, bitcoin-dev-request at lists.linuxfoundation.org
wrote:

The plan is that discounted jets will be explicitly labeled as jets in the
commitment.  If you can provide a Merkle path from the root to a node that
is an explicit jet, but that jet isn't among the finite number of known
discounted jets,



_______________________________________________
bitcoin-dev mailing list
bitcoin-dev at lists.linuxfoundation.org
https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20171102/47a8dfe5/attachment.html>
