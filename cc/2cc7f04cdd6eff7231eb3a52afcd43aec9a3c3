From: joroark@vt.edu (Douglas Roark)
Date: Thu, 27 Oct 2016 09:22:14 -0700
Subject: [bitcoin-dev] The Soft Fork Deception
In-Reply-To: <CAL8tG=mfRHidipraCbG7m6V18khf_czWbe=zZN7F6=Ksdae8AQ@mail.gmail.com>
References: <CAL8tG=mfRHidipraCbG7m6V18khf_czWbe=zZN7F6=Ksdae8AQ@mail.gmail.com>
Message-ID: <25040902-d057-8b58-b268-55b2b4579017@vt.edu>

Am attempting to move this over to bitcoin-discuss, as this (IMO) isn't
appropriate for dev and is borderline trolling. I won't be replying on
dev beyond this reply. I'll also try to keep this reply technical in
nature. (If this continues on discuss, no promises. :) )

On 2016/10/27 08:38, Andrew via bitcoin-dev wrote:
> I have been reading recently through the history of soft forks provided
> by Bitcoin Core:
> https://bitcoin.stackexchange.com/questions/43538/where-can-i-find-a-record-of-blockchain-soft-forks.

That list is incomplete.
https://www.reddit.com/r/Bitcoin/comments/2y4mq2/list_of_soft_and_hard_forks/cp68q4q/
is closer to the reality of the situation and is probably still incomplete.

> It has led me to think that there is a deceiving notion that soft forks
> do not force Bitcoin users to upgrade software. Yes, it's true that the
> past soft forks still allow old nodes to accept blocks under the tighter
> rules as valid, but what about miners who are still using old software?
> What about users who want to make a transaction using the old rules?
> Those people are no longer able to do those things. And if they want to
> do those things, a hard fork will result.

I don't see a particularly strong movement rallying for the right to use
sigs without strict DER, previously NOP opcodes that now do something,
etc. I'd imagine that a soft fork that "truly" forced people to do
things they didn't want would be much more controversial than SegWit.

> Remember what happened when BIP 66 was activated?

What, you mean miners who were deploying cheap hacks in order to eke out
a bit more hashpower? They got what they deserved.

> Obviously every one can debate about what should be the definition of a
> soft fork, but whatever that is, I think it is unacceptable how sloppily
> the past soft forks have been deployed. I can think of many ways in
> which we could have these new features that the soft forks provided, but
> without forcing the new rules, and simply making them features that can
> be used on an individual miner or transaction signer basis.

Well then, lay it on us. If your idea is so great, people will come
around to it eventually. As is, the only thing I can see is a load of
switches that would cause the code to act in all manner of weird ways.
New features would have to plan for every single possible use case,
including bizarre use cases that should have no basis in reality.
Congratulations. New feature deployment is now far more complicated, and
Bitcoin, depending on one's viewpoint, will become further stuck in the
mud feature-wise.

> Now that Segregated witness is scheduled to be deployed on November 15,
> we should take a look at this "soft fork" as well. I like the idea of
> Segregated Witness, but from conversations on Reddit and IRC, I see
> people saying that this soft fork will be like the others: requiring a
> hard fork in order to revert it. Is this true? I am getting conflicting
> messages by reading the BIP. It says that if all transactions are
> non-segwit, then a node will validate the block as before. But if we
> pass the threshhold (usually 95 % for 1000 blocks) will miners mining
> non-segwit blocks be ignored? This is not good...

I'd imagine that, if a block has zero SegWit Txes, everything will
function as it did before. It's not like SegWit forces everyone to use
SegWit when sending coins. It's just an optional method for sending coins.

> Now, we can't go back in time and fix the deployment of the soft forks,
> but I do propose one clean way to fix things: Remove all the previously
> "soft forked" rules for non segwit transactions, and require them only
> for segwit transactions. But make segwit optional! In addition to what I
> talked about above, this may also relieve some tensions of people who
> are not comfortable with segwit and are thinking of joining a hard fork
> like the Bitcoin Unlimited project.

Can you clearly define all the rules that you will remove? Are you going
to include things like the original OP_VER opcode (see
https://lists.linuxfoundation.org/pipermail/bitcoin-dev/2015-December/011938.html
for why this would be, IMO, a bad idea)? What about the multi-byte
opcodes (e.g., OP_PUBKEYHASH), which were hard forked off the network
but were technically soft forks since nobody had actually used them on
the network?

> Unless people can give me a good explanation as to why we are deploying
> soft forks in such forceful manner, or Bitcoin Core accepts my proposal,
> then I will have no choice but to create a new client (I'm thinking to
> call it Bitcoin Authentic), that will be just as Bitcoin Core but will
> always follow the chain with the most work regardless of whether soft
> fork rules are respected, and I would put at least CHECKLOCKTIMEVERIFY
> as mandatory within segwit transactions.

If you're going to create yet another Core fork, you'd better be sure to
define just how "authentic" you want to be. I'm guessing you don't want
the overflow output Tx fix (i.e., "the 92 billion Bitcoin bug") removed,
but that one was arguably a soft fork too. Sure, Satoshi committed it
and didn't even give the miners a chance to vote, but he still "forced"
everyone to deploy it. If freedom ?ber alles is what you seek, you'll
need to revert just about everything Satoshi included too, which will be
difficult since a lot of his fixes have been drastically changed in the
code (albeit in a manner where they still function as intended).

-- 
---
Douglas Roark
Cryptocurrency, network security, travel, and art.
https://onename.com/droark
joroark at vt.edu
PGP key ID: 26623924

-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 842 bytes
Desc: OpenPGP digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161027/bf440693/attachment.sig>
