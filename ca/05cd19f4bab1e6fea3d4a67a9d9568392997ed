From: pete@petertodd.org (Peter Todd)
Date: Wed, 01 Oct 2014 17:12:51 -0700
Subject: [Bitcoin-development] [BIP draft] CHECKLOCKTIMEVERIFY - Prevent
	a txout from being spent until an expiration time
In-Reply-To: <CABsx9T1Wh1ypQ-RCkAh+1qEw7QvBnuPja1teJ6xq9F_gQHAGOA@mail.gmail.com>
References: <20141001130826.GM28710@savin.petertodd.org>
	<201410011823.56441.luke@dashjr.org>
	<CABsx9T1xC_1GzquEKBH3TQscZoo3EjXyQFR3FF6BXufjduL_JA@mail.gmail.com>
	<542C6C61.30301@gmail.com>
	<CABsx9T1Wh1ypQ-RCkAh+1qEw7QvBnuPja1teJ6xq9F_gQHAGOA@mail.gmail.com>
Message-ID: <72667BA8-FDE6-4C6B-A463-9DFAE067C287@petertodd.org>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA256



On 1 October 2014 14:34:33 GMT-07:00, Gavin Andresen <gavinandresen at gmail.com> wrote:
>On Wed, Oct 1, 2014 at 5:04 PM, Alan Reiner <etotheipi at gmail.com>
>wrote:
>No, the burner would supply the funding transaction plus the redeeming
>script as the proof-of-burn to whoever needed the proof.

No, the redeemScript has to be provably published to miners for the sacrifice to be valid; if not you can exploit the scheme by hiding the redeemScript and having a big miner mine it at lower-than-face-value cost when it unlocks.

>Only after at least one confirmation, if there was some risk that
>revealing
>the redeeming script would make miners refuse to mine that first
>transaction because they want to get it plus the CHECK TIME BLOCK VERIFY
>"burn"
>transaction.

Yes, you could do that in a followup tx containing the redeemScript in an OP_RETURN output to prove publication. That said as I said to Luke-Jr, the sacrifices need to unlock pretty far into the future, so I don't see miners bothering to do this.





-----BEGIN PGP SIGNATURE-----
Version: APG v1.1.1

iQFQBAEBCAA6BQJULJiDMxxQZXRlciBUb2RkIChsb3cgc2VjdXJpdHkga2V5KSA8
cGV0ZUBwZXRlcnRvZGQub3JnPgAKCRAZnIM7qOfwhTwKCACD+GWzID7Qhn2no1p9
KYNiYlQVNt+DPZY0QB7MujL8riAmyJBliF9zptfjEdvglShoIzonJien/DOCjp9S
Lw2wMvPhtZGgSttJEvlr3wclty6TfWygd4Y+v/MR8TnYC99su7HhiQ1pkqohkklv
RxeF9jXhcJMERzN6wPUyeowfziBAfbWw+M5CwiXRlzLLBWO37eoDTXzUD0Np5Nia
nFxQ7sAsSbLijVpvigh9uIi3/1347VqwMc+0ZsZoZ2AnMICA8Q+XKNHv7DKpChxw
Xa+P532Di34uu8dlG/Z/UwYdENvb15P1yUZ7CEDfqNqrZp0RM7x+XKMA7QPwhuz3
YSBp
=mvKP
-----END PGP SIGNATURE-----



