From: greg@xiph.org (Gregory Maxwell)
Date: Sat, 24 Feb 2018 18:58:59 +0000
Subject: [bitcoin-dev] Graftroot: Private and efficient surrogate
 scripts under the taproot assumption
In-Reply-To: <1519328661.898070.1280084352.71F1C1C3@webmail.messagingengine.com>
References: <CAAS2fgSnfd++94+40vnSRxQfi9fk8N6+2-DbjVpssHxFvYveFQ@mail.gmail.com>
	<CAMnpzfphzviN9CqZaFa3P-U2OnHn56LYEtWtMktT1D37bPqvcQ@mail.gmail.com>
	<CAAS2fgSVHfh2++JLCTOWVmMiwfqSkGgj4O+HR4wTYTXaZr6n9Q@mail.gmail.com>
	<CAD5xwhiqcHjy2bFcCzNue+M92z3_QHZra801c6Kx7OBf=68sRw@mail.gmail.com>
	<CAMnpzfo3pL0EB1HyzHO1sEiauGarRUHaWOG-pzMe40wBsGiN3g@mail.gmail.com>
	<1519328661.898070.1280084352.71F1C1C3@webmail.messagingengine.com>
Message-ID: <CAAS2fgQYUb7gMbNbJOQ3pZ8WSRY-UhWjN9Y4GK96Lke-w3aFvw@mail.gmail.com>

On Thu, Feb 22, 2018 at 7:44 PM, Daniel Edgecumbe via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> I don't think that binding grafts to a particular transaction requires this aggregation.
> It seems to me that you could just sign H(txid, script) rather than H(script).
> I'm not aware of whether this would break aggregation.


That would require that you know the txid in advance. Sometimes you
do-- and a graftroot sighash flag could handle that... but usually you
wouldn't.  The case where you already do know it can sort of be
covered today without using the graftroot:  Sign a transaction
spending the multisig coin to the graft.  This isn't a strict
alternative however, because it's not atomic: you could imagine that
txn being announced and then the graft not being spent, while someone
would like to spend a different graft.  That non-atomiticity could be
addressed by making the graft spends an OR of all the other graft
spends but that isn't scalable or private.  Regardless, still doesn't
work if the graft isn't created after the fact.

The aggregation bit has the property of working just in time, even on
grafts created in advance.
