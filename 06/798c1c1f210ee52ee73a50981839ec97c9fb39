From: bitcoin-list@bluematt.me (Matt Corallo)
Date: Sun, 10 Jul 2011 16:21:17 +0200
Subject: [Bitcoin-development] Encrypted Wallet Backward Compatibility
In-Reply-To: <CA+8xBpd06DJ_0+OHRDsbzkecfG1+-ubXb2eiVRiSn6GT53ZDSQ@mail.gmail.com>
References: <1309801974.3423.80.camel@Desktop666>
	<CABsx9T31ZuQHKwcNnb9-NpaCA6c43PXVZ+Tc+GZ=2Wkz08enHw@mail.gmail.com>
	<1309811972.29355.19.camel@Desktop666>
	<1309828239.29355.28.camel@Desktop666>
	<CABsx9T2-htzpQPxrNqq1Efow2tuUdm5AQGOh0MS0MXvH5pD_5g@mail.gmail.com>
	<CA+8xBpd06DJ_0+OHRDsbzkecfG1+-ubXb2eiVRiSn6GT53ZDSQ@mail.gmail.com>
Message-ID: <1310307677.2230.5.camel@Desktop666>


At Luke's suggestion, I did a bit more digging and was able to find a
data structure in wallet settings that should cause all versions (well
all versions since Bitcoin was in github, and probably before then) to
crash on load instead of making a new wallet or opening in some bizarre
half-state.  I just put an empty object in addrIncoming (nfc what it was
used for, but it will get the desire effect and it isnt used anywhere in
the code aside from its definition).
You can see the commit at
https://github.com/TheBlueMatt/bitcoin/commit/2e8383469d7e12a495b3a1dbd41a8d211ff34fe8
Does anyone disagree and think a different solution would work better?

This resolves all known issues and suggestions that I know of on newenc
except for the invalid mlock calculations, which I will go fix right
now.  So...aside from that bug does anyone have any remaining
suggestions/blockers on newenc and, if not, can we get final ACKs on it?

Matt
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 836 bytes
Desc: This is a digitally signed message part
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20110710/58c68c99/attachment.sig>
