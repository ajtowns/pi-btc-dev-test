From: simon@superduper.net (Simon Barber)
Date: Tue, 30 Apr 2013 12:31:38 -0700
Subject: [Bitcoin-development] Fwd: Service bits for pruned nodes
In-Reply-To: <201304302027.10247.andyparkins@gmail.com>
References: <CAPg+sBjSe23eADMxu-1mx0Kg2LGkN+BSNByq0PtZcMxAMh0uTg@mail.gmail.com>
	<CAFBxzACmpODv-zvDb39TBpydSinwQ__BaPJfoVBeg==m7RLwrA@mail.gmail.com>
	<CA+8xBpcoTRfp=HFs4PdWAx1k_bZKRfopcTgeUpjPWSHRXv5qUA@mail.gmail.com>
	<201304302027.10247.andyparkins@gmail.com>
Message-ID: <51801C1A.7080805@superduper.net>

And then the problem of what domain name to use - ideally a single name 
would be used so caches had the maximum chance to reuse content. To 
keep the network distributed perhaps the existing DNS seed mechanism 
could be used - a few names, each serving a random bitcoind's address. 
Put :8333 after the name, and enhance bitcoind to respond to HTTP and 
p2p caching would be used!

Simon


On Tue 30 Apr 2013 12:27:10 PM PDT, Andy Parkins wrote:
> On Tuesday 30 April 2013 19:04:59 Jeff Garzik wrote:
>
>> The format currently used by bitcoind would be just fine --
>> blocks/blkNNNN.dat for raw data, size-limited well below 1GB.  Just
>> need to add a small metadata download, and serve the raw block files.
>
> That doesn't seem very generic.  It's tied far too much to the current storage
> format of bitcoind.
>
> Wouldn't it be better to add support for more bitcoin-protocol-oriented HTTP
> requests?  Then any client can supply the same interface, rather than being
> forced to create blkNNNN.dat on the fly?
>
>   http://bitcoind.example.com/block/BBBBBBBBBBBBBBBBBBBBBBB
>   http://bitcoind.example.com/tx/TTTTTTTTTTTTTTTTTTTTTTTT
>   http://bitcoind.example.com/block/oftx/TTTTTTTTTTTTTTTTTTT
>   http://bitcoind.example.com/peers
>   http://bitcoind.example.com/peer/nnn
>
> Essentially: block explorer's raw mode but in every bitcoind.  The hardest
> operation for light clients is finding out the block that contains a
> particular transaction -- something that bitcoind already knows.
>
> I'd like to see support for HTTP POST/PUT of signed transactions and block
> announcements too.
>
>
>
> Andy
>


