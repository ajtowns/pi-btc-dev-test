From: mike@plan99.net (Mike Hearn)
Date: Mon, 19 Jan 2015 21:40:13 +0100
Subject: [Bitcoin-development] BIP70: why Google Protocol Buffers for
	encoding?
In-Reply-To: <54BD6314.60607@gmail.com>
References: <CAN5esQJe0uUm0NyctaBa6WH7_JjeE_OLR=FY_XQWnSr50VRDyA@mail.gmail.com>
	<CAJHLa0OTynX4oiQoyanpRKE2tpAuS4L5X-2j20328725J9RrvQ@mail.gmail.com>
	<2C7D6208-1921-4DDC-90FE-DB1ABE1D61DB@petertodd.org>
	<CAN5esQLCV=L0kYxDGhK2F=qZ8OqMxyYS+-Pn17U_M+nV4Sj3Og@mail.gmail.com>
	<54BD6314.60607@gmail.com>
Message-ID: <CANEZrP3ZdFcQsP+EWgTYQDccFZbrZFTk+xi-YdWPCJzMRH79pA@mail.gmail.com>

>
> I'm a bit confused.  It's been a long time since I looked at protobuf (and
> will have to dig into it soon), but I seem to recall it doesn't have any of
> the determinism properties you guys just said.
>

It's not guaranteed no, which is why we store signed sub-messages as byte
arrays instead of typed submessages. In practice though, most
implementations do seem to serialise things the same way. I recall Python
used to be an odd one out, unsure if it still is.

OK, I guess we can boil this down more simply. BIP 70 uses protocol buffers
because I designed it and implemented the original prototype (with lots of
input from Gavin and an earlier proposal by sipa). I used protocol buffers
because, beyond all their nice properties, I used to work at Google and so
was very familiar with them.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150119/bbd8b7d4/attachment.html>
