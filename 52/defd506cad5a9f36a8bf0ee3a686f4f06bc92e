From: hearn@vinumeris.com (Mike Hearn)
Date: Fri, 18 Sep 2015 17:22:09 +0100
Subject: [bitcoin-dev] libconsensus and bitcoin development process
In-Reply-To: <20150918000718.GA5251@amethyst.visucore.com>
References: <CADm_WcY8Vy+k+5BaBS+jV6D6tmSXrok8rAxoPxxKOzUhyPWgMg@mail.gmail.com>
	<20150916222928.GC32688@muck>
	<20150918000718.GA5251@amethyst.visucore.com>
Message-ID: <CA+w+GKTD02XvaFaZaJmdmOgyER8SeQyqNrpnXyj8fJDMHUDPOA@mail.gmail.com>

>
> What one needs for that, I think, is a library that communicate with the
> node, and which offers functionality abstractly be similar to 'git pull':
> give me the tree path from my current known tip to the best tip, and supply
> the block hashes (and block data) along the way.
>

This is exactly what SPV libraries like bitcoinj do: they know how to build
a block locator, request the blocks forward from the common branch point,
and handle re-orgs onto whatever the current best chain are by downloading
data from a full node.

If your official position is people should all use bitcoinj to do things
like build extra indexes, then great. Send them our way. It already knows
how to calculate a UTXO set indexed by address.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150918/af7e248f/attachment.html>
