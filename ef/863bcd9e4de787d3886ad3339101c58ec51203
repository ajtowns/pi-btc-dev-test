From: laanwj@gmail.com (Wladimir)
Date: Tue, 31 Jan 2012 13:03:56 +0100
Subject: [Bitcoin-development] BIP 21 (modification BIP 20)
In-Reply-To: <jg8kql$bct$1@dough.gmane.org>
References: <1327881329.49770.YahooMailNeo@web121003.mail.ne1.yahoo.com>
	<jg88ed$i85$1@dough.gmane.org>
	<CA+s+GJDLoUG43hdLKYMwehBO9qqE=YCm7eJ2RN-TTTY_+OLp=A@mail.gmail.com>
	<CAKm8k+2wrsNDxEQXjZmqWQtO5DHiTjc0SgU_+QCU_FybeFFY6g@mail.gmail.com>
	<CA+s+GJAvEPda7UGHDoz84OavSh5jdN8wOhGgrNUgPU_Wh66Xyw@mail.gmail.com>
	<jg8kql$bct$1@dough.gmane.org>
Message-ID: <CA+s+GJCwUYtYX4EYRBMp-FujJnSO6ZBwN67k8DgLh75YbnHeeQ@mail.gmail.com>

>
> IMHO its standard that unknown URL parameters are simply ignored. I
> think we should not change this principle.
>

It's usually the right thing to do to be open to future backward-compatible
changes, but I don't know of any such standard, as it equally makes future
non-backward-compatible changes impossible.

Whatever will be defined in the BIP is the standard in this case.


> > (For example, if something that restricts the validity, such
> > as "expires" is added later on, it is pretty important not to ignore it.
> > Older clients should refuse to comply.)
>
> In this case, you'd need to refuse *all* parameters you don't know
> about. In consequence, all extensions would break older clients.
>

Which is exactly what I want to avoid by defining this up-front.

A versioning scheme can avoid this. Any BIP that breaks backwards
compatibility (for example, adds a multiple-send type or specific
restriction) should increase the version number. A client rejects URLs with
a version number higher than what it knows about.

That's the simplest way to handle it, and enough IMO.

Wladimir
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20120131/677da89f/attachment.html>
