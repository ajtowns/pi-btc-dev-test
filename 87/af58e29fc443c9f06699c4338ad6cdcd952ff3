From: john@seebitcoin.com (John Hardy)
Date: Sun, 5 Feb 2017 21:06:19 +0000
Subject: [bitcoin-dev] Fw: Transaction signalling through output address
 hashing
In-Reply-To: <BL2PR03MB435D7E36434A342BBEBC735EE410@BL2PR03MB435.namprd03.prod.outlook.com>
References: <BL2PR03MB4358286BE7F0D51F99B8EC6EE4C0@BL2PR03MB435.namprd03.prod.outlook.com>,
	<CAAt2M18uMt7BA_brpFM+zipodDkj_bdnZ3SXMxOpVPN+YqgMoA@mail.gmail.com>,
	<BL2PR03MB435D7E36434A342BBEBC735EE410@BL2PR03MB435.namprd03.prod.outlook.com>
Message-ID: <BL2PR03MB435DEA7CFB526C4DB58F740EE410@BL2PR03MB435.namprd03.prod.outlook.com>

Probabilistic collisions, while present, would be statistically insignificant at 4 chars length.


Implementation by wallets would just require a loop of their existing address generation until a match is found, trivial to implement. Wallets could provide a dropdown which shows the most commonly used signals as seen on the block chain, or a write-in.

Signalling within OP_RETURN increases the tx size and cost. This address hashing method keeps the very small economic cost of voting off the chain, rather than passing it cumulatively to everyone with the insertion of additional data.


Since I wrote this I have come across a similar idea called CryptoVoter which I think deserves more attention than it has had.

________________________________
From: Natanael <natanael.l at gmail.com>
Sent: Sunday, February 5, 2017 4:22 PM
To: Bitcoin Dev; John Hardy
Subject: Re: [bitcoin-dev] Transaction signalling through output address hashing

Censorship by miners isn't the only problem. Existing and normal transactions will probabilistically collide with these schemes, and most wallets have no straightforward way of supporting it.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170205/e1d82fb4/attachment.html>
