From: jordanmack@parhelic.com (Jordan Mack)
Date: Mon, 19 Dec 2011 10:13:08 -0800
Subject: [Bitcoin-development] [BIP 15] Aliases
In-Reply-To: <CAJna-HgjkC95pt+REmLi2tUh7MVmP-nYwLgzCzrK78qBmEcE_Q@mail.gmail.com>
References: <1323728469.78044.YahooMailNeo@web121012.mail.ne1.yahoo.com>
	<CAJna-HjyZv2y9grNdnKKG8k6tn7jdW=zL=vtrALpeW8jkuzV6Q@mail.gmail.com>
	<CAGQP0AEEzOjc2ayOJYgs_oh4RG91Dp4JSHUjyPX=qdp+ri6oSg@mail.gmail.com>
	<201112191130.43721.luke@dashjr.org>
	<4EEF6EA2.4060709@parhelic.com>
	<CAJna-HgjkC95pt+REmLi2tUh7MVmP-nYwLgzCzrK78qBmEcE_Q@mail.gmail.com>
Message-ID: <4EEF7EB4.6070800@parhelic.com>

With all due respect, I continue to disagree on the topic of using HTTP 
for data interchange.

Yes, an HTTP multipart response will accomplish the need for multiple 
named resources. The problem is that parsing of a multipart response 
isn't simple, and library support is weak across many languages. The 
widely adopted cURL library does not support multipart response parsing 
at all.

JSON is widely adopted, human readable, and has parsing libraries 
available for every major language. There is a bit of additional bloat, 
but I believe it is warranted in this case because of the convenience 
and ease it brings to developers.

If the idea is to "KISS", and provide a method that is both quick and 
easy to implement for the average developer, then JSON is a stand out 
option. Using HTTP for the data interchange will make things difficult 
for a lot of developers if multipart responses are used. JSON will be 
greeted with open arms.



On 12/19/2011 9:09 AM, slush wrote:
> I agree with Luke that HTTP standard has everything necessary and
> bloating payload with json/xml is not necessary.
>
> Btw that argument "we have json in client already" seems pretty wrong,
> because json in server rpc solves another problem (and solve it in wrong
> way, because of data type issues, but it's another story).



