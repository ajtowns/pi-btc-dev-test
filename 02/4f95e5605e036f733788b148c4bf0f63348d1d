From: gmaxwell@gmail.com (Gregory Maxwell)
Date: Fri, 23 May 2014 10:32:34 -0700
Subject: [Bitcoin-development] PSA: Please sign your git commits
In-Reply-To: <537F7BE2.6010006@jerviss.org>
References: <CA+s+GJBNWh0Py9KB4Y+B19ACeHOygtkLrPw5SbZ0SrVs50pqvg@mail.gmail.com>
	<7B48B9D4-5FB0-42CA-A462-C20D3F345A9A@beams.io>
	<CA+s+GJC8=OHmmF7fc-fT8fQDWE1uNcCS8-ELEKr0MjQ4CpbPBA@mail.gmail.com>
	<537D0CE1.3000608@monetize.io>
	<CAAS2fgSN00Y2XUqLoft9=Fq1GfWvSYQfXdD=RE8890iOU5asRQ@mail.gmail.com>
	<CAJHLa0NNMKW57r2cRsu3a1UFSf5MSp-EWATqf--DKTe-=n26CA@mail.gmail.com>
	<CA+s+GJBJKQqsJHzdHvw0-r3mmvbRMDpUrWFj2O2-RXkpgGLO7g@mail.gmail.com>
	<537F7BE2.6010006@jerviss.org>
Message-ID: <CAAS2fgR39ChTjhmY-wpcgUoHWGJenazQyOaj5=ym5zYOHiFQig@mail.gmail.com>

On Fri, May 23, 2014 at 9:48 AM, Kyle Jerviss <bitcoin-devel at jerviss.org> wrote:
> Multisig is great for irreversible actions, but pointless most of the
> time, which is why no PGP developer or user ever thought to implement it.
>
> If you lose a key and an attacker signs a bogus email or commit with it,
> we all roll back with no lasting harm done.

PGP in general is not very thoughtful about security. There are a lot
of things it does poorly. This is easily excusable considering the
historical context it came from? it was the first real cryptographic
tool I used, at the time its distribution had concerns about legality,
just getting things into people's hands was an achievement enough.

>From a cryptosystem perspective much more powerful things can be done
now, but there is a long way to go in figuring out how to many any
cryptographic tool usable to people.

PGP is a general purpose tool? which is the hardest kind to write? its
also used in a lot of irreversible contexts: If your key deploys a bad
software release and it steals everyone's data or wipes their disks?
thats not an irreversible action by any means.

If you want threshold pgp though? it's possible. The RSA cryptosystem
is directly compatible with threshold cryptography. It's just that no
one has written the tools. There are implementations of the bare
cryptosystem however.

One of my longer term would-be-nice goals for a upgrade bitcoin script
2.0 would be being thoughtful enough in the design that it could be
adopted as a signing cryptosystem in other applications (e.g. tools
similar to GPG)? allowing for things like creating a public key which
can only issue trust level 0 certifications, only certifications for
certain organizations (e.g. *.debian.org) unless thresholded with an
offline key, or only signing for messages meeting a certain
programmatic predicate generally.


