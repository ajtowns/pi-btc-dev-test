From: luke@dashjr.org (Luke Dashjr)
Date: Tue, 30 Jun 2015 23:43:17 +0000
Subject: [bitcoin-dev] A possible solution for the block size limit:
	Detection and rejection of bloated blocks by full nodes.
In-Reply-To: <CAGpx8BXMfUSaW1FONsbR4dK-uvQ73TjGuh5PUzsxJVwVUW3O1A@mail.gmail.com>
References: <CAGpx8BXMfUSaW1FONsbR4dK-uvQ73TjGuh5PUzsxJVwVUW3O1A@mail.gmail.com>
Message-ID: <201506302343.18048.luke@dashjr.org>

On Tuesday, June 30, 2015 11:41:29 PM Peter Grigor wrote:
> The block size debate centers around one concern it seems. To wit: if block
> size is increased malicious miners may publish unreasonably large "bloated"
> blocks. The way a miner would do this is to generate a plethora of private,
> non-propagated transactions and include these in the block they solve.
> 
> It seems to me that these bloated blocks could easily be detected by other
> miners and full nodes: they will contain a very high percentage of
> transactions that aren't found in the nodes' own memory pools. This
> signature can be exploited to allow nodes to reject these bloated blocks.
> The key here is that any malicious miner that publishes a block that is
> bloated with his own transactions would contain a ridiculous number of
> transactions that *absolutely no other full node has in its mempool*.
> 
> Simply put, a threshold would be set by nodes on the allowable number of
> non-mempool transactions allowed in a solved block (say, maybe, 50% -- I
> really don't know what it should be). If a block is published which
> contains more that this threshold of non-mempool transactions then it is
> rejected.
> 
> If this idea works the block size limitation could be completely removed.

This is easily defeated simply by broadcasting the bloat beforehand...

Luke
