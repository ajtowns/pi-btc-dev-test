From: dev@jonasschnelli.ch (Jonas Schnelli)
Date: Fri, 23 Oct 2015 08:53:20 +0200
Subject: [bitcoin-dev] [patch] Switching Bitcoin Core to sqlite db
In-Reply-To: <CADm_WcaLQzigsdmFR43JqiCYJVpmqkhVDc8GiVG=UN+Z1zg7+w@mail.gmail.com>
References: <CADm_WcaLQzigsdmFR43JqiCYJVpmqkhVDc8GiVG=UN+Z1zg7+w@mail.gmail.com>
Message-ID: <5629D960.8060109@jonasschnelli.ch>

-----BEGIN PGP SIGNED MESSAGE-----
Hash: SHA1

> Here is the beginnings of an implementation to replace leveldb
> with sqlite: https://github.com/jgarzik/bitcoin/tree/2015_sqlite
> 
> It builds, but still needs work before passing tests.

Nice work!

Although not sure if we should focus directly on sqlite4 (could be
optional with a configure flag and a subtree [until stable], sqlite3
supported over depends).

Also i personally would recommend to not implement it as a
replacement, instead, support multiple backends (wrapper header /
different wrapper implementations [leveldb / sqlite3 / sqlite4]). But
? agreed ? should not be the focus, but a nice additional flexibility
if it not require much more work.
And ? in theory ? multiple database back-ends would allow migration.

Before investigating to deep, i think we need a dbwrapper bench tool
that represents our needs and our style how we hit the database.
Gavins recently added bench target / bench environment could be used
for that.

/jonas
-----BEGIN PGP SIGNATURE-----
Version: GnuPG v1

iQIcBAEBAgAGBQJWKdlgAAoJECnUvLZBb1Ps7J8P/2L6215fd0rWGv5uvbLSnQvm
hy1T2AaOfH5HXd2m95icaKYk+ugvQAL80Q/67YwZbPLsT4fErgegw8n75Z6nh/Pc
OJ1EtAvD+Kc/Vm0Wcvt421HXwnm4f+j+8eoEvpG6DdC8gfIG+efhM7DljeNbPFrA
ieNe7XrQ1EZ29lMzpQv0nx3bi6tUHOWuazk82B6vnK49MjH7nrUFipcc18nXbSpM
ZKjQakXmfqIBG8QP9ZUYUlW4aoG0oaOoZnGjQA2LeXBJpIPLpE/WPg0XaXubC+No
232CJNtNyUOmjkb2qbep6vSYgqGJNy1HbCU5y3qooxJhFnKdo63CQsyJKSpL/ssi
0lWraNxjbacxsBn+63In3wEkj02orwm2zTO4I77wCrZmJgpvBFb9bZWTeL8DCYSG
DTkZoKWEK74xvm+dNpEWXK9Lm1ltfyhPdaFeMoRDub4w2uuYlk3KuD8Vdy81HYJb
sak8FbkiWw9xx2OP9+G56Arf9W6mnJ3YHJGrY4SXeRAfuNYwGFHIGt6I1JobuHy4
VWmcHuooz/Q9JLUu3Rr3HsEdXYgCmgmWuzTgWG+Hx92Y6XLWV5pOX+vFRO6J5fSm
aTYPD4GsTM3FROXw5ezlXJ+2y1+ITzmrfm03fEDQvoIyH0TwBqBc5sMBBkma5DDR
0HUthPHWCD+AxbBPbRVa
=CUMX
-----END PGP SIGNATURE-----
