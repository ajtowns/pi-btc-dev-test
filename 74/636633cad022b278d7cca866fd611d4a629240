From: jl2012@xbt.hk (Johnson Lau)
Date: Thu, 26 Jan 2017 20:57:32 +0800
Subject: [bitcoin-dev] Changing the transaction version number to be
 varint
In-Reply-To: <3264264.qpyyi8nbyQ@strawberry>
References: <3264264.qpyyi8nbyQ@strawberry>
Message-ID: <A4EF0301-870D-415C-9E80-36DBBA7F3E65@xbt.hk>


> On 20 Jan 2017, at 22:02, Tom Zander via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org> wrote:
> 
> The way to do this is that from a certain block-height the current 
> transaction format labels bytes 2, 3 & 4 to be unused.
> From that same block height the interpretation of the first byte is as 
> varint.
> Last, we add the rule from that block-height that only transactions that do 
> not lie about their version number are valid. Which means version 1.
> 
> Do people see any problems with this?
> This could be done as a soft fork.

Yes, because:

a) what you are talking is a hardfork, because existing nodes will not be able to deserialise the transaction. They will forever interpret the first 4 bytes as nVersion.

b) it is not a ?lie? to use non-version 1 txs. It is permitted since v0.1. And version 2 txs is already used due to BIP68.

c) if you are talking about changing the tx serialisation just for network transfer, it?s just a p2p protocol upgrade, not softfork nor hardfork

-------------------------

There are 3 ways to introduce new tx formats:

1. through a softfork, and make the old clients blind to the new format. That?s the segwit approach

2. through a hardfork. Forget the old clients and require new clients to understand the new format. That?s the FlexTran approach (in my understanding)

3. p2p only, which won?t affect consensus. No one could stop you if you try to copy a block by writing in your native language and pass to your peer.

In either way, one could introduce whatever new format one wants.
