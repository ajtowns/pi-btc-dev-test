From: adam.back@gmail.com (Dr Adam Back)
Date: Wed, 7 Oct 2015 11:45:24 +0200
Subject: [bitcoin-dev] extension-blocks/sidechains &
 fractional/coin-cap/demurrage (Re: Let's deploy BIP65 CHECKLOCKTIMEVERIFY!)
Message-ID: <CALqxMTFAb5_AQfH1ZfWAC6JscttG6puaJGbS43WDZRt9h7cRQg@mail.gmail.com>

Micha I think you are correct, I dont think extension blocks (or
sidechains for that matter) can allow soft-fork increase of the total
Bitcoins in the system, because the main chain still enforces the 21m
coin cap.  A given extension block could go fractional, but if there
was a run to get out, the last users out will lose, or they'll all
take a hair-cut etc.  So presumably users would decline to use an
extension block with fractional bitcoin.

I mean you could view it like say an exchange (mtgox?) that somehow
accidentally or intentionally creates fictional Bitcoin IOUs in it's
system, eg in some kind of pyramid scheme - that doesnt create more
Bitcoins, it just means people who think they have IOUs for real
Bitcoins, are fractional or fake.  With an extension block or
sidechain furthermore it is transparent so they will know they are
fractional.

Relatedly it seems possible to implement a sidechain with advertised
demurrage, with an exit or entrance fee to discourage holding outside
of the chain to avoid demurrage.  There are apparently economic
arguments for why people might opt in to that (higher velocity
economic activity, gresham's law, merchants offering discounts for
buying with demurrage Bitcoins, maybe lower per transaction fees
because say miners can mine the demurrage).  However that is a
different topic, again not changing the number of coins in
circulation.

Adam


On 7 October 2015 at 08:13, Micha Bailey via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
>
>
> On Monday, October 5, 2015, Mike Hearn via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org> wrote:
>>>
>>> As Greg explained to you repeatedly, a softfork won't cause a
>>> non-upgraded full node to start accepting blocks that create more
>>> subsidy than is valid.
>>
>>
>> It was an example. Adam Back's extension blocks proposal would, in fact,
>> allow for a soft forking change that creates more subsidy than is valid (or
>> does anything else) by hiding one block inside another.
>
>
> Maybe I'm missing something, but wouldn't this turn into a hard fork the
> moment you try to spend an output created in one of these extension blocks?
> So sure, the block that contains the extension would be considered valid,
> but unupgraded validators will not update the UTXO set accordingly, meaning
> that those new TXOs can't be spent because, according to their rules, they
> don't exist.
