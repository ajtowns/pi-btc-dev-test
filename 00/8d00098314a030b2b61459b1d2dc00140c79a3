From: onelineproof@gmail.com (Andrew)
Date: Sat, 28 Jan 2017 18:34:58 +0000
Subject: [bitcoin-dev] Transaction Replacement by Fee
In-Reply-To: <20170112195830.GA5663@savin.petertodd.org>
References: <2ac49fb0-ff79-5cb9-7b92-14ec791ecc45@dyne.org>
	<CAB3F3DtJ3Hq5saz7fVd95bhi+Y84m6U1GuduHOGyXuhVwRaWeg@mail.gmail.com>
	<20170112195830.GA5663@savin.petertodd.org>
Message-ID: <CAL8tG==tQ7N98FNDcWCSRqe87pBkS3pc3dO3tzioSAtyXSWqLA@mail.gmail.com>

Hi, recently been trying to get RBF working on a multisig input. I set
the nSequence to 0, but script didn't verify (used python-bitcoinlib).
Should it work for this type of transaction? I am using the
SignatureHash(...) method of signing, not rpc.signrawtransaction(...).

Thanks

On Thu, Jan 12, 2017 at 7:58 PM, Peter Todd via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> On Thu, Jan 12, 2017 at 09:13:23AM -0500, Greg Sanders via bitcoin-dev wrote:
>> BIP125 is the standard way to signal:
>> https://github.com/bitcoin/bips/blob/master/bip-0125.mediawiki
>>
>> Should explain everything you need.
>
> Additionally some miners mine full replace-by-fee, which has no limitations on
> nSequence. My implementation (for v0.13.2) is here:
>
>     https://github.com/petertodd/bitcoin/tree/replace-by-fee-v0.13.2
>
> and is identical to Bitcoin Core modulo the nSequence stuff being removed, and
> a special service bit added to allow full-rbf nodes to preferentially peer with
> each other to make sure replacement transactions get propagated.
>
> In practice full-RBF works fairly well, so while it's even faster to use the
> nSequence signalling specified in BIP-125, doing so is not mandatory so long as
> you can et your replacement transaction to a full-RBF node.
>
> --
> https://petertodd.org 'peter'[:-1]@petertodd.org
>
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
>



-- 
PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
