From: andyparkins@gmail.com (Andy Parkins)
Date: Thu, 7 Jul 2011 17:19:39 +0100
Subject: [Bitcoin-development] Suggestion for enhancements to getblock
In-Reply-To: <CANEZrP0L-8PmwLma4DJdfoj+NefXS0kH8wvVFe-vuyRnpF-+mw@mail.gmail.com>
References: <201107071049.48131.andyparkins@gmail.com>
	<CANEZrP0L-8PmwLma4DJdfoj+NefXS0kH8wvVFe-vuyRnpF-+mw@mail.gmail.com>
Message-ID: <201107071719.45416.andyparkins@gmail.com>

On 2011 July 07 Thursday, Mike Hearn wrote:
> On Thu, Jul 7, 2011 at 11:49 AM, Andy Parkins <andyparkins at gmail.com> wrote:
> > Imagine this situation though.  I am a light weight client.  I store the
> > block headers only.  I am only interested in the history of my own
> > wallet addresses. I receive a block broadcast with a transaction that
> > sends coins to one of my addresses.  That transaction references other
> > transactions (of course), but I haven't stored any transactions.  So; I
> > want to request those transactions and ensure they are all valid and in
> > blocks.  I can't.
> 
> Everyone writing an alternative client goes through this thought
> process :-) There's no point in doing it, you cannot prove your
> transaction is not a double spend. That requires knowledge (ie, an
> index) of all transactions.

Ah; you mistake me.  I'm not interested in double spend prevention, in this 
case I'd be willing to trust the full node to return whatever block it thinks 
contains that transaction, and that it has already done double spend 
prevention.

What I want to be able to do though is calculate a balance for an aribtrary 
address.  Not every address; just the particular ones that the client is 
interested in.  It's complete overkill to require the whole block chain just 
to calculate the balance of a few addresses.

> You have to treat appearing deep in the chain as ipso-facto proof of
> validity. Lightweight/SPV clients simply must have that trust, it
> cannot be done any other way. See this article:

Not entirely.  If I ask for "the block that contains transaction with hash 
12345678abcd..." then when I get that full block, I can verify the merkle tree 
myself.  I do have to trust that the peer hasn't been adding double spends in, 
but not that the transaction is actually in the chain.

> > It should be possible to request the current pending transaction list.
> 
> I think it'd be better to implement the filtering suggestions that
> have been made. It doesn't scale to download the entire memory pool -

I'm sorry, I've only started watching this list in the last few days.  I'm not 
familiar with the filter suggestions.

I'm not entirely sure I see how a filter helps.  If I've been offline for ten 
minutes then I need all the transactions pending in the last ten minutes.  No 
amount of filtering makes that list any smaller.

> a better approach is to give the remote node a filter to match against
> transactions then have it only relay those. After setting a filter,
> transactions pending and matching would be sent in one big inv and you
> can then keep the connection open to learn about new transactions
> without needing to "drink from the firehose". Filters can be
> probabilistic and set on many different nodes to reduce the privacy
> implications.

That would be fine.  My reason for suggesting using getblocks was that it 
didn't introduce a new command.



Andy

-- 
Dr Andy Parkins
andyparkins at gmail.com
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 198 bytes
Desc: This is a digitally signed message part.
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20110707/0c3f8d5e/attachment.sig>
