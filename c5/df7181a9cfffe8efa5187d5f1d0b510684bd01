From: pete@petertodd.org (Peter Todd)
Date: Thu, 28 Sep 2017 22:10:33 -0400
Subject: [bitcoin-dev] Rebatable fees & incentive-safe fee markets
In-Reply-To: <DC1B3730-756E-4A9B-BE6E-481B78E4104D@mattcorallo.com>
References: <359FFE85-86AF-4FBD-9491-3528382E5002@friedenbach.org>
	<DC1B3730-756E-4A9B-BE6E-481B78E4104D@mattcorallo.com>
Message-ID: <20170929021033.GA12303@savin.petertodd.org>

On Fri, Sep 29, 2017 at 01:53:55AM +0000, Matt Corallo via bitcoin-dev wrote:
> I'm somewhat curious what the authors envisioned the real-world implications of this model to be. While blindly asking users to enter what they're willing to pay always works in theory, I'd imagine in such a world the fee selection UX would be similar to what it is today - users are provided a list of options with feerates and expected confirmation times from which to select. Indeed, in a world where users pay a lower fee if they paid more than necessary fee estimation could be more willing to overshoot and the UX around RBF and CPFP could be simplified greatly, but I'm not actually convinced that it would result in higher overall mining revenue.

Note too that the fee users are willing to pay often changes over time.

My OpenTimestamps service is a perfect example: getting a timestamp confirmed
within 10 minutes of the previous one has little value to me, but if the
previous completed timestamp was 24 hours ago I'm willing to pay significantly
more money because the time delay is getting significant enough to affect the
trustworthyness of the entire service. So the fee selection mechanism is
nothing more than a RBF-using loop that bumps the fee every time a block gets
mined w/o confirming my latest transaction.

This kind of time sensitivity is probably true of a majority of Bitcoin
use-cases, with the caveat that often the slope will be negative eventually:
after a point in time completing the transaction has no value.

-- 
https://petertodd.org 'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 455 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20170928/054c801c/attachment.sig>
