From: hozer@hozed.org (Troy Benjegerdes)
Date: Sat, 23 Aug 2014 01:39:06 -0500
Subject: [Bitcoin-development] Proposal: Encrypt bitcoin messages
In-Reply-To: <CANEZrP0WC2XL3Z0==BMjhWJuA8DgxBKUMKMdhh267JXduCZ0KQ@mail.gmail.com>
References: <c45a638f1e1640fe84bef01d12cda4c3@hotmail.com>
	<BLU402-EAS2546AD6C97DCED8FCE9C04CC6D20@phx.gbl>
	<CAACjpwKX9cwowiCruP9xw2UiqfsVXVC1TdKvA1HbQZ6UZ6qBsA@mail.gmail.com>
	<CANEZrP0WC2XL3Z0==BMjhWJuA8DgxBKUMKMdhh267JXduCZ0KQ@mail.gmail.com>
Message-ID: <20140823063906.GS22640@nl.grid.coop>

I think it's a little disingenuous to talk about encrypting the P2P protocol
as a security improvement, when all the organized crime agencies need to do is
borrow a Fedex/UPS truck and deliver some laptops to Github employees and they
can insert whatever monitoring/0-day they want.

Encryption is complicated stuff to actually **get right**, and the more stuff
you throw crypto around, the more likely it is you'll get a Heartbleed 0-day

If you want to increase security, make it simpler. I'm not even sure it can
be easily simplified... how could you separate the P2P network transport from
the core blockchain functionality?

On Wed, Aug 20, 2014 at 04:37:24PM +0200, Mike Hearn wrote:
> I would be very happy if we upgraded the P2P protocol with MAC keys and a
> simple home grown encryption layer, because:
> 
>    1. It's practically guaranteed that 5-eyes intelligence agencies are
>    either systematically deanonymising Bitcoin users already (linking
>    transactions to real world identities) or close to succeeding. Peter is
>    correct. Given the way their infrastructure works, encrypting link level
>    traffic would significantly raise the bar to such attacks. Quite possibly
>    to the level where it's deemed unprofitable to continue.
> 
>    2. Tor is not a complete solution. The most interesting links to monitor
>    are those from SPV clients connecting to Core nodes. Whilst Java SPV
>    clients have the nice option of an easy bundled Tor client (er, once we fix
>    the last bugs) clients that are not based on bitcoinj would have to use the
>    full-blown Tor client, which is not only a PITA to bundle as Tor is not at
>    all library-fied, but is a giant pile of C which is almost certainly
>    exploitable. Even if it runs in a separate address space, for many
>    platforms this is insufficient as a compromised Tor client could then go
>    ahead and compromise your wallet app too.
> 
> Implementing a full Tor client is not a reasonable thing to ask of a wallet
> developer, but doing HMAC checks and a simple ECDH exchange + AES would be
> quite realistic.

> ------------------------------------------------------------------------------
> Slashdot TV.  
> Video for Nerds.  Stuff that matters.
> http://tv.slashdot.org/

> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development


-- 
----------------------------------------------------------------------------
Troy Benjegerdes                 'da hozer'                  hozer at hozed.org
7 elements      earth::water::air::fire::mind::spirit::soul        grid.coop

      Never pick a fight with someone who buys ink by the barrel,
         nor try buy a hacker who makes money by the megahash



