From: solar@heliacal.net (solar)
Date: Thu, 29 Sep 2011 12:49:46 +0000
Subject: [Bitcoin-development] Deprecating "midstate" in getwork?
In-Reply-To: <4E845B09.8040400@justmoon.de>
References: <4E80D591.2080100@nilsschneider.net>
	<CAJNQ0stW-7HMw-O_C9Go8ViRrxBNtEpsbhSRyc3aOzm6OvR6dA@mail.gmail.com>
	<4E845935.8060601@nilsschneider.net> <4E845B09.8040400@justmoon.de>
Message-ID: <A5A4F15F-4934-43A8-938B-8ECF8A2238E6@heliacal.net>

It's just simple SHA2, you can implement the whole thing easily without dragging in a huge lib like OpenSSL.  I guess I haven't looked at it recently but the original CPU miner was just implemented locally in bitcoin and didn't use any libs.

It's just that because it's block based, there is no need to ever recalculate the first half since the brute forcing value is in the second half of the block..

This was the original prototype for the OpenCL miner without eliminating redundant calculations and it shows the block1 and block2 calculations clearly.

http://heliacal.net/~solar/bitcoin/sha256.cl

Laszlo

On Sep 29, 2011, at 11:48 AM, Stefan Thomas wrote:

> BitcoinJS uses OpenSSL to calculate midstate:
> 
> https://github.com/bitcoinjs/node-bitcoin-p2p/blob/master/native.cc#L380
> 
> 
> On 9/29/2011 1:40 PM, Nils Schneider wrote:
>> Yes, that's possible and what
>> https://github.com/bitcoin/bitcoin/pull/535 does. However, deprecating
>> midstate (and hash1) would allow for much cleaner code.
>> 
>> A pull request for marking midstate (and hash1) as deprecated can be
>> found at https://github.com/bitcoin/bitcoin/pull/538
>> 
>> On 29.09.2011 12:23, John Smith wrote:
>>> Nils,
>>> 
>>> Sounds good. I'm also doubtful of depending on two crypto libraries when
>>> OpenSSL does perfectly well.
>>> 
>>> However, losing compatibility with miners is not very nice. Is there
>>> really not a way to compute midstate with OpenSSL?
>>> 
>>> JS
>>> 
>>> On Mon, Sep 26, 2011 at 7:42 PM, Nils Schneider<nils at nilsschneider.net
>>> <mailto:nils at nilsschneider.net>>  wrote:
>>> 
>>>     Hey,
>>> 
>>>     I'd like to simplify the internal reference miner and remove all
>>>     dependencies on cryptopp (it's the only place we use cryptopp instead of
>>>     OpenSSL).
>>> 
>>>     Unfortunately, cryptopp is also used to calculate getwork "midstate".
>>>     This field is redundant and the miner could easily calculate it from the
>>>     blockheader so I'd like to remove it.
>>> 
>>>     Any thoughts? Where should such a change should be announced so all
>>>     miners can be upgraded?
>>> 
>>>     ------------------------------------------------------------------------------
>>>     All the data continuously generated in your IT infrastructure contains a
>>>     definitive record of customers, application performance, security
>>>     threats, fraudulent activity and more. Splunk takes this data and makes
>>>     sense of it. Business sense. IT sense. Common sense.
>>>     http://p.sf.net/sfu/splunk-d2dcopy1
>>>     _______________________________________________
>>>     Bitcoin-development mailing list
>>>     Bitcoin-development at lists.sourceforge.net
>>>     <mailto:Bitcoin-development at lists.sourceforge.net>
>>>     https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>>> 
>>> 
>> 
>> ------------------------------------------------------------------------------
>> All the data continuously generated in your IT infrastructure contains a
>> definitive record of customers, application performance, security
>> threats, fraudulent activity and more. Splunk takes this data and makes
>> sense of it. Business sense. IT sense. Common sense.
>> http://p.sf.net/sfu/splunk-d2dcopy1
>> _______________________________________________
>> Bitcoin-development mailing list
>> Bitcoin-development at lists.sourceforge.net
>> https://lists.sourceforge.net/lists/listinfo/bitcoin-development
>> 
> 
> 
> ------------------------------------------------------------------------------
> All the data continuously generated in your IT infrastructure contains a
> definitive record of customers, application performance, security
> threats, fraudulent activity and more. Splunk takes this data and makes
> sense of it. Business sense. IT sense. Common sense.
> http://p.sf.net/sfu/splunk-d2dcopy1
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



