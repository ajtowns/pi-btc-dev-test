From: gmaxwell@gmail.com (Gregory Maxwell)
Date: Sun, 29 Jan 2012 03:14:06 -0500
Subject: [Bitcoin-development] Quote on BIP 16
In-Reply-To: <4F24D7C1.3070106@gmail.com>
References: <1327812740.41242.YahooMailNeo@web121002.mail.ne1.yahoo.com>
	<1327813841.99379.YahooMailNeo@web121006.mail.ne1.yahoo.com>
	<4F24D7C1.3070106@gmail.com>
Message-ID: <CAAS2fgQhfYfwrT6M8AVDRYETwS0WrXD7iYoxUvcPT3VMJm5ryA@mail.gmail.com>

On Sun, Jan 29, 2012 at 12:23 AM, Alan Reiner <etotheipi at gmail.com> wrote:
[snip]
> But gmaxwell has expressed some compelling reasons why plain multi-sig
> might be abused, which maybe suggests we don't want it ever considered
> standard...? ?I guess I'm not really promoting one thing or another, but

Be careful not to conflate multisig _addresses_  and P2S with multisig
output scripts in general.

Of the issues I raised only the size of the potentially unprunable
transaction outputs is an argument against multisig outputs which
aren't getting packed up in addresses.

Things like negotiated escrow arrangements can work okay either way.

I think P2SH is still better for these for two reasons: Reasonable
anti-spam behavior by network participant may make it hard to make
large output scripts (see above), but this isn't an issue yet...  and
P2S(H) lets you use a separate escrow-maker tool for clients paying
into escrow without any knowledge or support of escrow transactions in
that client. This uncoupling is important both for general "feature
velocity" as well as providing a uniform feature set across bitcoin
services (e.g. you negotiate paying someone via escrow, you use a tool
to make a mutually agreed escrow configuration, but your funds are in
MTGOX? no issue if P2SH is widely used).


