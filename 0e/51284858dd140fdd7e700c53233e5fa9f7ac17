From: luke@dashjr.org (Luke-Jr)
Date: Tue, 31 Jan 2012 11:07:00 -0500
Subject: [Bitcoin-development] BIP 20 Rejected, process for BIP 21N
In-Reply-To: <1328020046.70720.YahooMailNeo@web121002.mail.ne1.yahoo.com>
References: <1328020046.70720.YahooMailNeo@web121002.mail.ne1.yahoo.com>
Message-ID: <201201311107.01635.luke@dashjr.org>

On Tuesday, January 31, 2012 9:27:26 AM Amir Taaki wrote:
> BIP 20 really has no support among implementations such as Bitcoin-Qt,
> Electrum, MultiBit or Bitcoin-JS.

It does among implementations such as Spesmilo and WalletBuddy, and has for 
some time. More importantly, it achieved consensus and Final status before any 
objections were made. Final only changes to Superceded. What's the point of a 
formal BIP process if that process won't be followed?

> Also BIP 20 is problematic because it is incompatible with about every
> standard on the web. All the HTML, URI and everything uses decimal numbers
> alone. I see no reason for breaking with tradition.

That's not incompatibility, and not true. The standards use hexadecimal 
numbers, and I can't even think of a single case off-hand where decimal is 
used.

That being said, I'd be fine with a spec that used strtol-compatible satoshis 
for amount. This is both simple and forward-compatible.

On Tuesday, January 31, 2012 9:53:57 AM Gary Rowe wrote:
> Regarding the decimal vs satoshi notation I see a few problems with
> satoshi:
> 
> * readability - humans reading the URI would expect it to accurately
> reflect what is being displayed (subject to internationalisation issues)
> For example, amount=1.234 is more human readable than amount=123400000
> (ish)

This is true only for BTC users. While that might be a sensible unit today, it 
almost certainly won't be in the future. amount=0.00001 is much worse than 
amount=1000 or amount=1x3

> * backwards compatibility - existing software already uses the decimal
> notation

Existing software uses Satoshis internally, and it's generally regarded as a 
design flaw that it uses BTC numbers in the JSON-RPC protocol.

> * forwards compatibility - Bitcoin needs to move beyond the satoshi to 20
> dps for some reason, this remains OK within the existing schema, but forces
> decimals into the satoshi scheme

This strikes me as more of "let's test the code earlier rather than later" 
than forwards compatibility. The problem is that it's pretty much unanimous 
that floating-point should never be used, and without that both 
representations will be rounding when there are smaller units available.



