From: jordanmack@parhelic.com (Jordan Mack)
Date: Mon, 19 Dec 2011 10:52:54 -0800
Subject: [Bitcoin-development] [BIP 15] Aliases
In-Reply-To: <201112191315.25857.luke@dashjr.org>
References: <1323728469.78044.YahooMailNeo@web121012.mail.ne1.yahoo.com>
	<201112191130.43721.luke@dashjr.org>
	<4EEF6EA2.4060709@parhelic.com>
	<201112191315.25857.luke@dashjr.org>
Message-ID: <4EEF8806.6070707@parhelic.com>

I believe I'm missing something here. I was under the interpretation 
that alias resolution was going the KISS route, of basically a single 
HTTP request and response. How do you see binary data fitting into this?

I'm not going to pretend that I know all the details of the difficulties 
that were encountered with JSON-RPC. But in the argument of developer 
accessibility, it still serves a purpose. If JSON-RPC support is 
removed, you will immediately lose a large pool of high level language 
developers. I would hope that support would not be dropped, even if it 
only remains as a secondary protocol with limited capability. Most high 
level developers are only going to use it for basic functions anyhow.



On 12/19/2011 10:15 AM, Luke-Jr wrote:
> Because computers work with binary. I don't think anyone wants to implement a
> fully functional script assembler just to send funds.
>
> JSON-RPC won't go on forever. In any case, bitcoind's use of JSON-RPC is
> exactly why I (and many other developers) have come to the realization how
> poorly supported JSON really is. Most of the common languages do have a
> library, but almost all of them have one issue or another (particularly around
> the very undefined Number type).



