From: pete@petertodd.org (Peter Todd)
Date: Fri, 3 Jan 2014 15:39:39 -0500
Subject: [Bitcoin-development] An idea for alternative payment scheme
In-Reply-To: <20140103202320.GA16515@netbook.cypherspace.org>
References: <CAGXD5f2_E82kEqsGGrhiywGogVCbR8vzs7q51=Luaq2ZEzGBtA@mail.gmail.com>
	<CAAS2fgQ8M6=Utj7SBpN4Fiv6rgBKvZfm5jpmwkFRuFsZYZLqHQ@mail.gmail.com>
	<20140103202320.GA16515@netbook.cypherspace.org>
Message-ID: <20140103203939.GA30273@savin>

On Fri, Jan 03, 2014 at 09:23:20PM +0100, Adam Back wrote:
> Seems like you (Nadav) are the third person to reinvent this idea so far :)

Lol, fourth if you include me, although my case is rather embarassing as
I had re-read Bytecoin's original post recently and completely missed
the main point of it!

> I wrote up some of the post-Bytecoin variants here:
> 
> https://bitcointalk.org/index.php?topic=317835.msg4103530#msg4103530
> 
> The general limitation so far is its not SPV compatible, so the recipient
> has to test each payment to see if its one he can compute the private key
> for.  Or the sender has to send the recipient out of band the derivation
> key.

Actually I think it has the potential to be *more* SPV compatible than
the alternative, as in conjunction with prefix filters it lets you
receive unlimited unrelated payments that you can find in the blockchain
with a single prefix query with a fixed bandwidth/anonymity set size
tradeoff. (obviously in conjunction with one of the many ways of tagging
transactions for more efficient search)

The BIP38 approach with UI's that make it easy to create a new address
for every payment on the other hand force you to either accept higher
bandwidth consumption, or decrease your anonymity set size, or lose
payments. (inclusive)

I've got a post talking about this in more detail as well as an overview
of bloom filters vs. prefix filters that I'll publish tomorrow. (tl;dr:
bloom filters have very poor O(n^2) scalability and should be
depreciated)

> However at present most of the bitcoin infrastructure is using the bitcoin
> broadcast channel as the communication channel, which also supports payer
> and payee not being simultaneously online.  You have to be careful also not
> to lose the key.  You dont want a subsequent payer data loss event to lose
> money for the recipient.  You want the message to be sent atomically.
> 
> It does seem like a very attractive proposition to be able to fix the
> address reuse issue.  Admonishment to not reuse addresses doesnt seem to
> have been successful so far, and there are multiple widely used wallets that
> reuse addresses (probably in part because they didnt implement HD wallets
> and so are scared of losing addresses due to backup failure risks of non HD
> wallets and fresh addresses).

-- 
'peter'[:-1]@petertodd.org
0000000000000001a96469654430aa06e4ae7c7328a7eb848c6fc63443f24e4a
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140103/a067cbfe/attachment.sig>
