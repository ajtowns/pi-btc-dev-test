From: jl2012@xbt.hk (jl2012 at xbt.hk)
Date: Mon, 31 Aug 2015 12:24:21 -0400
Subject: [bitcoin-dev] Short review of previously-proposed exotic
 SIGHASH types
In-Reply-To: <CABaSBazLWrmd=iKj2sM61cfU==U4zQq95auQLbbnv4HbO_H=QQ@mail.gmail.com>
References: <CABaSBazLWrmd=iKj2sM61cfU==U4zQq95auQLbbnv4HbO_H=QQ@mail.gmail.com>
Message-ID: <f926a0895b9f8cec7f62045383bec7ea@xbt.hk>

Bryan Bishop via bitcoin-dev ? 2015-08-30 14:56 ??:

> 
> SIGHASH_WITHOUT_PREV_SCRIPTPUBKEY
> SIGHASH_WITHOUT_PREV_VALUE
> SIGHASH_WITHOUT_INPUT_TXID
> SIGHASH_WITHOUT_INPUT_INDEX
> SIGHASH_WITHOUT_INPUT_SEQUENCE
> SIGHASH_WITHOUT_OUTPUT_SCRIPTPUBKEY
> SIGHASH_WITHOUT_OUTPUT_VALUE
> SIGHASH_WITHOUT_INPUTS
> SIGHASH_WITHOUT_OUTPUTS
> SIGHASH_WITHOUT_INPUT_SELF
> SIGHASH_WITHOUT_OUTPUT_SELF
> SIGHASH_WITHOUT_TX_VERSION
> SIGHASH_WITHOUT_TX_LOCKTIME
> SIGHASH_SIGN_STACK_ELEMENT:
> https://github.com/scmorse/bitcoin-misc/blob/master/sighash_proposal.md
> 

Thanks for your summary. This one seems particularly interesting. 
However, it does not allow fine adjustment for each input and output 
separately, so I wonder if it really "fully enable any seen or unforseen 
use case of the CTransactionSignatureSerializer." as it claims.
