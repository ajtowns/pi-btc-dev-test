From: timon.elviejo@gmail.com (=?ISO-8859-1?Q?Jorge_Tim=F3n?=)
Date: Sun, 15 Apr 2012 12:54:23 +0200
Subject: [Bitcoin-development] Bitcoin TX fill-or-kill deterministic
	behavior
In-Reply-To: <CA+8xBpc5CZ9Sx4MwPdeS0-5frnV9B+mJ5OwcPoUVrygTawiJBg@mail.gmail.com>
References: <CA+8xBpc5CZ9Sx4MwPdeS0-5frnV9B+mJ5OwcPoUVrygTawiJBg@mail.gmail.com>
Message-ID: <CAGQP0AGbLYZYwKGb0AHOPx3BadBQ399A67ntEo98mpm=kKgZ+g@mail.gmail.com>

On 4/12/12, Jeff Garzik <jgarzik at exmulti.com> wrote:
> 1.  N = 1 or 2 or whatever the community prefers.  Ideally enough time
> for a third-tier miner, mining strange TXs, finds a block.
> 2.  H1 = height of block chain, when a TX is received
> 3.  H2 = H1 + (144 * N)
> 4.  If block chain height reaches H2, and TX has not made it into a
> block, drop TX from memory pool

Why not just adding a field expiration_block = H2?
It seems more explicit and flexible than using a 144 * N constant.
You're changing the protocol anyway, right?

Another question, aren't different peers going to get different H1 for
the same tx?


