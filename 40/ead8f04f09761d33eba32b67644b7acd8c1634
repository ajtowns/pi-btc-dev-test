From: dkbryant@gmail.com (Dan Bryant)
Date: Thu, 21 Dec 2017 17:21:24 -0600
Subject: [bitcoin-dev] BIP for Legacy Sign Verify functions
In-Reply-To: <201712212309.07243.luke@dashjr.org>
References: <CAAUFj100ULfTbEorSK2PF5nvW-R_TCMOiboBBEMj+eS5upgU8Q@mail.gmail.com>
	<201712212309.07243.luke@dashjr.org>
Message-ID: <CAAUFj127=fNaPh+RtGgTbqDfxS=+ihCwDDWhkRpvdRSLtRf7xA@mail.gmail.com>

Thank you... I've updated.

> New schemes should probably NOT be based on the current one.

Fair enough... I still think there are those who would still like an
existing sign/verify BIP to reference.

On Thu, Dec 21, 2017 at 5:09 PM, Luke Dashjr <luke at dashjr.org> wrote:

> On Thursday 21 December 2017 10:26:25 PM Dan Bryant via bitcoin-dev wrote:
> > https://github.com/brianddk/bips/blob/legacysignverify/
> bip-0xyz.mediawiki
>
> It's not even correct... Your first "verify message" step is not possible;
> you
> can't get a public key from an address.
>
> What is actually done, is using the signature + message to perform key
> recovery, to extract the public key of the signer, and then hashing that
> and
> comparing it to the address provided.
>
> > Although this is a well established functionality, it has never been
> > published in a BIP.  My proposal is simply to provide a reference point
> for
> > future expansion of these capabilities into new address schemes.
>
> New schemes should probably NOT be based on the current one.
>
> Luke
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20171221/9543aa61/attachment-0001.html>
