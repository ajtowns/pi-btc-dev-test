From: pete@petertodd.org (Peter Todd)
Date: Sun, 14 Apr 2013 02:25:35 -0400
Subject: [Bitcoin-development] RFC: extend signmessage/verifymessage to
 P2SH multisig
In-Reply-To: <516A3CD1.20704@gmail.com>
References: <20130414050958.GA11142@savin>
 <516A3CD1.20704@gmail.com>
Message-ID: <20130414062535.GA3310@savin>

On Sun, Apr 14, 2013 at 01:21:21AM -0400, Alan Reiner wrote:
> If we're going to extend/expand message signing, can we please add a
> proper ASCII-armored format for it?  Really, anything that encodes the
> signed message next to the signature, so that there's no ambiguities
> about what was signed.  You can keep the "bare signatures" as an option
> for backwards compatiblity, but offer this as the primary one.
> 
> What we really want is to have the user copy an ASCII-armored block of
> text into the client (or we could have a URI-extension for this), and
> the app pops up with a window that says "The following message has a
> valid signature from address 1XKjf32kJbf...:   <message>".  

I already looked into ASCII-armoring PGP style for a different project.
(timestamping) Basically you'd want to follow RFC2440, section 7
"Cleartext signature framework":

-----BEGIN BTC SIGNED MESSAGE-----

Hello world!
-----BEGIN BTC SIGNATURE-----
IKBeCbxXHvD1TJh8ZlMySo26w5z6YZQD1xqKgbhsvlhEgcFD+kvKx4LzUz1yxg/8
IdYdBnzez77VDq3odHrVftg=
-----END BTC SIGNATURE-----

Pretty simple really and doesn't need to be done prior to other
signmessage changes. There may be an issue passing \r's through the RPC
interface; the RFC specifies CRLF line endings.

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130414/ec7c65b7/attachment.sig>
