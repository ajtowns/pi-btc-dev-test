From: pete@petertodd.org (Peter Todd)
Date: Thu, 11 Apr 2013 07:27:08 -0400
Subject: [Bitcoin-development]
 =?utf-8?q?To_prevent_arbitrary_data_storage?=
 =?utf-8?q?_in_txouts_=E2=80=94_The_Ultimate_Solution?=
In-Reply-To: <CAC1+kJOM=QrK4w5O-sqH=CV30v7KCxBZPBS9c+p12XK5UsJ2iw@mail.gmail.com>
References: <CAAS2fgSkiqfhJxHJNw8i8G5yd1XY6tUTDynQ+AekbwmHP_jZmw@mail.gmail.com>
	<20130410030301.GA9921@savin> <20130410030831.GA12447@savin>
	<CAC1+kJOM=QrK4w5O-sqH=CV30v7KCxBZPBS9c+p12XK5UsJ2iw@mail.gmail.com>
Message-ID: <20130411112708.GA1006@savin>

On Wed, Apr 10, 2013 at 05:58:10PM +0200, Jorge Tim?n wrote:
> On 4/10/13, Peter Todd <pete at petertodd.org> wrote:
> > Oh, and while we're at it, long-term (hard-fork) it'd be good to change
> > the tx hash algorithm to extend the merkle tree into the txouts/txins
> > itself, which means that to prove a given txout exists you only need to
> > provide it, rather than the full tx.
> >
> > Currently pruning can't prune a whole tx until every output is spent.
> > Make that change and we can prune tx's bit by bit, and still be able to
> > serve nodes requesting proof of their UTXO without making life difficult
> > for anyone trying to spent old UTXO's. The idea is also part of UTXO
> > proof stuff anyway.
> 
> I thought about this before, I like the idea very much.
> Would such a fork be controversial for anyone?
> Would anyone oppose to this for some reason I'm missing?

You mean https://bitcointalk.org/index.php?topic=137933.0 ?

I would oppose it, and I wrote the above proposal. The code required to
implement UTXO fraud proofs is more complex than the entire Bitcoin code
base; obviously that much new fork-critical code opens up huge technical
risks. As an example, can you think of how UTXO fraud proofs can cause
an arbitrarily deep re-org?

-- 
'peter'[:-1]@petertodd.org
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130411/839ddbc3/attachment.sig>
