From: clem.ds@gmail.com (=?ISO-8859-1?Q?Cl=E9ment_Elbaz?=)
Date: Thu, 9 Jan 2014 18:46:05 +0100
Subject: [Bitcoin-development] Getting trusted metrics from the block
 chain in an untrusted environment ?
In-Reply-To: <CAP63atZ=-Wd++nuL_Gf-wnT768w3wHhxsA+KgVY-S_C2+1QRLw@mail.gmail.com>
References: <CAP63atZBJqi6oN9EbPxzEo4qk5ZMgEKQ11NSPWmU65FypDdbzw@mail.gmail.com>
	<CAP63atZ=-Wd++nuL_Gf-wnT768w3wHhxsA+KgVY-S_C2+1QRLw@mail.gmail.com>
Message-ID: <CAP63atYX1rKCNaDHr5WwAO_kORibCDaBcecWoanpRDR0WMw6aA@mail.gmail.com>

Hi Rob,

Thank you for answering.

> So you want to 'benefit' from the network without contributing to it ?

> Not going to happen - why would anyone be interested in providing you
'free compute resources' ?

Not free. As I stated in my second email ("some more thoughts" etc.), it
seems really fitting to pay a fee to the network for every metric request
you send. 'I want to execute this request on your blockchain, and I want
the response to be approved by the Bitcoin network, and here is a fee for
all the computing trouble".

You either have the blockchain and the hardware resources to compute things
based on it, or you have addresses that takes a few bytes of data in your
environement but contains money, potentially a lot. The situation seems
plausible to me.

The thing is, as soon as there is an exchange of value (hardware computing
resources vs bitcoins) between parties that do not trust each other, there
is a need for proof of work, and thus my idea (in my second email) of a
specifc block chain that would store metric requests, current block number
when they were asked, and hash of theirs responses. This can be validated
by others nodes and as such can be published in a ledger just like bitcoin
transaction.

> Setup a node, create an API interface and have your 'app' use your API on
yoru node :p

The idea would have been actually to be able to get these computations in a
trusted way without having access to a specific trusted node. Compensating
absence of trust by providing actual money.

Anyways. I got quite a few answer privately, and after study it seems SPV
mode of bitcoinj will be just fine for my specific needs. I would have
liked the solution to be network-centric ideally (By committing to an
SPV-ready API like bitcoinj, I'm committing to languages that provide a
stable SPV API), but I'll be just fine with bitcoinj for now.

Thank you Rob and everyone for your time.

Cl?ment





On Wed, Jan 8, 2014 at 8:44 PM, Cl?ment Elbaz <clem.ds at gmail.com> wrote:

> Some more thoughts :
>
> If no such project exist yet, I thought it could work with an alternate,
> small and fixed-length 'metric request block chain' of some sort.
>
> It would temporarily stores structures defined as [metric request |
> current block number when request was made | hash of the response] instead
> of financial transactions.
>
> These structures are verifiable so it could work the same way as a regular
> financial blochchain.
>
> It should not be part of the main Bitcoin protocol but could be a plugin
> interacting with the data managed by the fullnode bitcoin software.
>
> Also, metrics requests can be expensive to compute and validate, so it
> would make sense to pay a fee everytime you ask one.
>
> Does any of this makes any sense to you ?
>
> Thanks,
>
> Cl?ment
>



-- 
Cl?ment ELBAZ
06. 09. 55. 78. 41
clem.ds at gmail.com
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140109/e419fe72/attachment.html>
