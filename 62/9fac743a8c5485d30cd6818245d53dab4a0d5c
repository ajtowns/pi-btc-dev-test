From: nathan.cook@gmail.com (Nathan Cook)
Date: Wed, 5 Oct 2016 05:15:36 +0300
Subject: [bitcoin-dev] BIP draft: OP_CHECKBLOCKATHEIGHT
In-Reply-To: <201610010502.09524.luke@dashjr.org>
References: <201609230957.03138.luke@dashjr.org>
	<87oa34d8fz.fsf@rustcorp.com.au>
	<201610010502.09524.luke@dashjr.org>
Message-ID: <CAGNXQMRfCwCcMZavXs87K_cRNjL1_DU3q4Vu-F3w92ncd-Neag@mail.gmail.com>

On 1 October 2016 at 08:02, Luke Dashjr via bitcoin-dev <
bitcoin-dev at lists.linuxfoundation.org> wrote:

> On Saturday, October 01, 2016 4:01:04 AM Rusty Russell wrote:
>
> > - Otherwise <bits> of hash is compared to lower <bits> of blockhash.
>
> Lower in what endian? Why only that endian? Why only lower? I can see a
> possible use case where one wants to look at only the high bits to ensure
> their transaction is only valid in a block with at least a certain
> difficulty...


Why not use segwit versioning for all this stuff? That lets you re-enable
the bitwise operations like OP_AND, permitting arbitrary bit-masks.
Further, the "at least a certain difficulty" problem suggests a solution by
extending the validity of opcodes like OP_LESSTHAN etc. to 256-bit inputs.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20161005/c0497d3f/attachment.html>
