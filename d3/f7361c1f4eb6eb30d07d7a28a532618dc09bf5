From: gmaxwell@gmail.com (Gregory Maxwell)
Date: Wed, 25 Mar 2015 19:22:58 +0000
Subject: [Bitcoin-development] Address Expiration to Prevent Reuse
In-Reply-To: <551301F0.9020806@thinlink.com>
References: <55121611.1030104@thinlink.com>
	<CAAS2fgRzskGcHjEhJLnyu-VMTR49i-Wo9TbOOqkHqEasxuO71A@mail.gmail.com>
	<551301F0.9020806@thinlink.com>
Message-ID: <CAAS2fgQMW+Htqu0wonL7r-ZN_t0evRayDCGRMKYzRUaCm6wxjw@mail.gmail.com>

On Wed, Mar 25, 2015 at 6:44 PM, Tom Harding <tomh at thinlink.com> wrote:
> Is this assuming payment protocol?  A major benefit of address
> expiration, if it works, would be that it works without requiring
> payment protocol.

Not at all.

> Are you suggesting there is no implementation of address expiration that
> wouldn't allow the string to be trivially changed by the sender?

The sender is always able to intentionally hide their payment under a
rock-- There is no encoding that can prevent that.

The defense against that is to not accept payments not made according
to the payees specification.

> I don't understand, explanation would be appreciated.

To reject reused scriptPubKeys you must remember past scriptPubkeys in
order to test against them.

For illustration purposes imagine a bitcoin system where there is only
a single base unit available for trade.

Verification of that chain requires O(1) storage (the identity of the
current chain tip, and the identity of the spendable coin.).
Verification with duplicate elimination requires O(N) storage (with N
being the length of the history), since you need to track all the
duplicates to reject.

(The same is true for actual Bitcoin as well, though the constant
factors make the difference somewhat less stark.)


