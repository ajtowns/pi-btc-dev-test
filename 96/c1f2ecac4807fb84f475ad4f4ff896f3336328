From: luke@dashjr.org (Luke Dashjr)
Date: Thu, 2 Oct 2014 00:55:36 +0000
Subject: [Bitcoin-development]
 =?utf-8?q?=5BBIP_draft=5D_CHECKLOCKTIMEVERI?=
 =?utf-8?q?FY_-_Prevent=09a_txout_from_being_spent_until_an_expiration_tim?=
 =?utf-8?q?e?=
In-Reply-To: <CE356B97-E5AC-4A04-B67C-A542D070F1C5@petertodd.org>
References: <20141001130826.GM28710@savin.petertodd.org>
	<201410011823.56441.luke@dashjr.org>
	<CE356B97-E5AC-4A04-B67C-A542D070F1C5@petertodd.org>
Message-ID: <201410020055.37347.luke@dashjr.org>

On Thursday, October 02, 2014 12:05:15 AM Peter Todd wrote:
> On 1 October 2014 11:23:55 GMT-07:00, Luke Dashjr <luke at dashjr.org> wrote:
> >Thoughts on some way to have the stack item be incremented by the
> >height at
> >which the scriptPubKey was in a block?
> 
> Better to create a GET-TXIN-BLOCK-(TIME/HEIGHT)-EQUALVERIFY operator.
> scriptPubKey would be:
>     GET-TXIN-BLOCKHEIGHT-EQUALVERIFY
> (fails unless top stack item is equal to the txin block height)
>     <delta height> ADD
> (top stack item is now txin height + delta height)
>     CHECKLOCKTIMEVERIFY

This sounds do-able, although it doesn't address using timestamps.

> > A limitation of encoding the target
> >height/time directly, is that miners may choose not to mine the first
> >transaction until they can also take the "burn to fee". So, one may
> >prefer to
> >say "cannot be spent until 100 blocks after the first transaction is
> >mined",
> >in effect reproducing the generation maturity rule.
> 
> You'd want these sacrifices to unlock years into the future to thoroughly
> exceed any reasonable business cycle; that's so far into the future that
> miners are almost certain to just mine them and collect the fees.

For many use cases, short maturity periods are just as appropriate IMO.

Luke


