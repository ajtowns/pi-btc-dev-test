From: karljohan-alm@garage.co.jp (Karl-Johan Alm)
Date: Wed, 5 Sep 2018 12:00:39 +0900
Subject: [bitcoin-dev] Testnet3 Reest
In-Reply-To: <CAAS2fgSF=hx581aGUBVv6zardKG4gex43B-jZbAu0a9Rupg1WQ@mail.gmail.com>
References: <CABuOfuh7M6siJW1FzXajsBSeYSu=TBEgx9SAmCbwnP=yb7rJOQ@mail.gmail.com>
	<20180830200239.ujuzh7pitcuatdt3@petertodd.org>
	<7E247E56-38A5-4B99-941A-A2CC837D2567@xbt.hk>
	<CAAS2fgSF=hx581aGUBVv6zardKG4gex43B-jZbAu0a9Rupg1WQ@mail.gmail.com>
Message-ID: <CALJw2w6a2YMS=nso5_6Rsom8qgNt93me3sv7Gr1vrHNcrZOVHQ@mail.gmail.com>

On Fri, Aug 31, 2018 at 9:43 PM Gregory Maxwell via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> We looked at doing this previously in Bitcoin core and jtimon had some
> patches,  but the existing approach increased the size of the
> blockindex objects in memory  while not in signed testnet mode.   This
> could probably have been fixed by turning one of the fields like the
> merkel root into a union of it's normal value and a pointer a
> look-aside block index that is used only in signed block testnet mode.

I am currently working on an implementation that simply puts a global
mapping of block hash to signature that is transparently
(de)serialized in the block header.

We were looking into various ways to stuff the signature into the
actual header itself without changing its size, but this looked like
it required truncating the prevblock/merkleroots and such, which
seemed a bit too invasive.

I don't think my approach with a global mapping to sig differs in any
meaningful way from your suggested union, but corrections welcome.

The code is here: https://github.com/kallewoof/bitcoin/tree/signet

I believe jtimon is interested in helping out, and Jeremy Rubin has
also said he wants to help.
