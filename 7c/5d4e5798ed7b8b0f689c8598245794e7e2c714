From: pieter.wuille@gmail.com (Pieter Wuille)
Date: Mon, 17 Nov 2014 13:00:07 +0100
Subject: [Bitcoin-development] Increasing the OP_RETURN maximum payload
	size
In-Reply-To: <CABbpET8yyZHO185Fzip61KoRTrGy4bEaoEpnzPuARfhhfPUTCg@mail.gmail.com>
References: <CABbpET9eTgk1GyxYbcG++O_rqsnfB7w5_Xp4XgE6qwkmGsm1eg@mail.gmail.com>
	<201411161724.19573.luke@dashjr.org>
	<CABm2gDpBOtZB01Qj3Dc3dWSpG2zLr+VPYbnwrq8YVh8qfxMW5Q@mail.gmail.com>
	<CABm2gDoi1593ssoGN69E42c-N3s02yYKAqDEDA2m-e+6LqjpTQ@mail.gmail.com>
	<5469692F.9030702@gmail.com>
	<CAPg+sBgM4ja0Y96KekJUN7Qg=o0xa1B0VUiiPuFQTYfrupoERg@mail.gmail.com>
	<CABbpET8yyZHO185Fzip61KoRTrGy4bEaoEpnzPuARfhhfPUTCg@mail.gmail.com>
Message-ID: <CAPg+sBjrgKtv+teEobckRLRuw_o0eTN=R5YQE8=Mv6LT5oTCDQ@mail.gmail.com>

On Mon, Nov 17, 2014 at 12:43 PM, Flavien Charlon
<flavien.charlon at coinprism.com> wrote:
>> My main concern with OP_RETURN is that it seems to encourage people to use
>> the blockchain as a convenient transport channel
>
> The number one user of the blockchain as a storage and transport mechanism
> is Counterparty, and limiting OP_RETURN to 40 bytes didn't prevent them from
> doing so. In fact they use multi-sig outputs which is worse than OP_RETURN
> since it's not always prunable, and yet let them store much more than 40
> bytes.

It wasn't limited to stop them from using it. It was limited to avoid
giving others the impression that OP_RETURN was intended for data
storage. For the intended purpose (making a transaction commit to some
external data) a 32-byte hash + 8 byte id is more than sufficient.

> For Open Assets, we need to store a URL in the OP_RETURN output (with
> optionally a hash) plus some bytes of overhead. 40 bytes comes really short
> for that. The benefit of having a URL in there is that any storage mechanism
> can be used (Web, FTP, BitTorrent, MaidSafe...), whereas with only a hash,
> you have to hardcode the storing mechanism in the protocol (and even then, a
> hash is not enough to address a HTTP or FTP resource). Storing only a hash
> is fine for the most basic timestamping application, but it's hardly enough
> to build something interesting.

Do you really need that data published to everyone? You're at the very
least exposing yourself to censorship, and (depending on the design)
potentially decreased privacy for your users. I would expect that for
most colored coin applications, just having the color transfer
information in external data sent directly to the receiver with
transactions committing to it should suffice.

-- 
Pieter


