From: nickodell@gmail.com (Nick ODell)
Date: Fri, 23 Dec 2016 10:35:49 -0700
Subject: [bitcoin-dev] Multisig with hashes instead of pubkeys
In-Reply-To: <CAL8tG=n6NnTaeV71-sWi3Bvk_8E8F20_69f90k-Shrc4XXUQog@mail.gmail.com>
References: <CAL8tG=n6NnTaeV71-sWi3Bvk_8E8F20_69f90k-Shrc4XXUQog@mail.gmail.com>
Message-ID: <CANN4kmcQGehMAVWdvakOam6n=crVnv5Gc6WGMg6WCstkD3XRPw@mail.gmail.com>

The first issue is that doing two OP_SWAP's in a row will just return
you to the original state. The second issue is that all of them end up
hashing the same key, so anyone on the network can spend this output.
(See https://en.bitcoin.it/wiki/Script for a good resource on opcodes
and what each of them do. There are also a few simulators floating
around, but I can't recommend any in particular.)

Third, if you're concerned about exposing public keys, why not use a
P2SH script? That won't expose your public keys until you spend from
it.

On Thu, Dec 22, 2016 at 11:29 AM, Andrew via bitcoin-dev
<bitcoin-dev at lists.linuxfoundation.org> wrote:
> Hi
>
> Is there a worked out scriptPubKey for doing multisig with just hashes
> of the participants? I think it is doable and it is more secure to a
> compromised ECDSA. I'm thinking something like this for the
> scriptPubKey:
>  2 OP_SWAP OP_SWAP OP_SWAP OP_DUP OP_HASH160 <pubKeyHash1>
> OP_EQUALVERIFY OP_DUP OP_HASH160 <pubKeyHash2> OP_EQUALVERIFY OP_DUP
> OP_HASH160 <pubKeyHash3> OP_EQUALVERIFY 3 OP_CHECKMULTISIG
>
> and <sigs><pubkeys> for the scriptSig
>
> Can anyone confirm or send me a link to the worked out script?
>
> Thanks
>
> --
> PGP: B6AC 822C 451D 6304 6A28  49E9 7DB7 011C D53B 5647
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
