From: rusty@rustcorp.com.au (Rusty Russell)
Date: Tue, 16 Jun 2015 06:31:04 +0930
Subject: [Bitcoin-development] [RFC] Canonical input and output ordering
	in transactions
In-Reply-To: <CAOG=w-tJjzrR_REJOShULfSO=T3ueHko-oQHdhqMCdZD0G_BDA@mail.gmail.com>
References: <87k2vhfnx9.fsf@rustcorp.com.au>
	<CAAS2fgRgWZX_O_2O1bgdFd_04xVp5Lnpw4hf=v6RSTXmsbdzPQ@mail.gmail.com>
	<87r3pdembs.fsf@rustcorp.com.au>
	<CAAS2fgTY5cqwj5XuKtkD8Z8N1vF=PZMba8EtGkbWnEackOcN8Q@mail.gmail.com>
	<CAOG=w-tJjzrR_REJOShULfSO=T3ueHko-oQHdhqMCdZD0G_BDA@mail.gmail.com>
Message-ID: <87eglcelf3.fsf@rustcorp.com.au>

Mark Friedenbach <mark at friedenbach.org> writes:
> There's another important use case which you mentioned Greg, that also
> requires special exemption: compact commitments via mid-state compression.
>
> The use case is an OP_RETURN output sorted last, whose last N bytes are a
> commitment of some kind. A proof of the commitment can then use mid state
> compression to elide the beginning of the transaction.
>
> How do you make a special exemption for this category of outputs? I can't
> think of a very clean way of doing so that doesn't require an ugly
> advertising of sort-order exemptions.

Yes, we can suit any one use case, but not all of them.

For example, outputs shall be sorted by:
        1.  First byte (or 0 if script is zero length) minus 107.
        2.  The remainder of the script in lexographical order.

This would put OP_RETURN outputs last.

Though Peter Todd's more general best-effort language might make more
sense.  It's not like you can hide an OP_RETURN transaction to make it
look like something else, so that transaction not going to be
distinguished by non-canonical ordering.

Cheers,
Rusty.


