From: jgarzik@bitpay.com (Jeff Garzik)
Date: Fri, 31 May 2013 15:25:44 -0400
Subject: [Bitcoin-development] Implementing batch processing for
	-blocknotify
In-Reply-To: <CAH2=CKxBX6BcLS+CSKxZstut+uhHPQUY7HnLHSoMjZACgd4v1g@mail.gmail.com>
References: <CAH2=CKzW41TYbX6c1F8oknA_LttOaA8vmDPmojuowXgEADY61g@mail.gmail.com>
	<CAFHuXuZaSNkUUX8o_k=wSf5MeQ3tAj6yD8DJuLwbyA0C3xRQuQ@mail.gmail.com>
	<CAH2=CKxBX6BcLS+CSKxZstut+uhHPQUY7HnLHSoMjZACgd4v1g@mail.gmail.com>
Message-ID: <CAJHLa0M+EExHNMoQ7K3u8R6KHF-sZLbGcEoREyuZzwuvrn1zgQ@mail.gmail.com>

On Fri, May 31, 2013 at 8:37 AM, Rune Kj?r Svendsen <runesvend at gmail.com> wrote:
> I've thought about this as well. It just seems somewhat clunky to me. I'd
> really prefer having bitcoind put out messages in batches, if it's doable,
> that is.
>
> I'd run into a lot of concurrency issues, as far as I can see, where I can't
> be sure that the queue isn't written to while, for example, it is opened by
> the program that needs to process the queue items.
>
> What if a disk operation takes a long time to finish, and a two queue
> operations want to add to the queue simultaneously? This really brings
> forward all the horrors of concurrent programming.

This is not a compelling need to update bitcoind for this.

The vast majority of systems are currently capable of processing a
block, before another block arrives.

As for parallel processing, your "what if" has been a solved problem
for decade(s) now.

-- 
Jeff Garzik
Senior Software Engineer and open source evangelist
BitPay, Inc.      https://bitpay.com/


