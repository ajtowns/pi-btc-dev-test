From: jb55@jb55.com (William Casarin)
Date: Sun, 17 Feb 2019 10:00:32 -0800
Subject: [bitcoin-dev] NIH warning (was Re: [BIP Proposal] Simple
	Proof-of-Reserves Transactions)
In-Reply-To: <37f1c2f8-5c2e-0224-1557-f041f4b842ca@satoshilabs.com>
References: <CAChG=YV2em+6c9P4DEUB1=+ZSEA6S0j9HDuWoKBeRVMmtzaMNg@mail.gmail.com>
	<201902151518.50135.luke@dashjr.org>
	<37f1c2f8-5c2e-0224-1557-f041f4b842ca@satoshilabs.com>
Message-ID: <87h8d2l2gv.fsf@jb55.com>

Pavol Rusnak via bitcoin-dev <bitcoin-dev at lists.linuxfoundation.org>
writes:

> We've been using Protocol buffers in Trezor since the beginning and so
> far it has proven to be as a great choice.
>
> While I agree it is always risky to add an exotic dependency to a
> software project, this one has lots of interoperable implementations in
> all possible languages you can name and it's very easy to work with.
>
> In the past, the Bitcoin dev community used the same arguments with
> regards to PSBT and we ended up with something that is almost as complex
> as protobuf, but it's de-facto proprietary to Bitcoin.
>
> Cherry on top is that PSBT format can be easily translated back and
> forth to PB making it even more obvious that PB should have been used in
> the first place.

One argument against Protobuf is that people are already moving away
from it in favor of FlatBuffers, Google's successor to Protobuf that
doesn't require serialization/deserialization of structures.

Do we really want to be chasing the latest serialization library fad
each time a new one comes out? I do think there is value in having
accessible serialization formats, which is why I think it's a good idea
to provide custom format to protobuf conversion tools.

This way users who prefer not to include large dependencies don't have
to, and protobuf users can just do an extra step to convert it into
their preferred format.

Cheers,
Will

-- 
https://jb55.com
