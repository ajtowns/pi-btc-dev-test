From: pete@petertodd.org (Peter Todd)
Date: Mon, 29 Jul 2013 03:41:31 -0400
Subject: [Bitcoin-development] Opcode whitelist for P2SH?
In-Reply-To: <CAJHLa0Oe4YT+DnEiVxN_tykMQ8YPtyKTf3K7kb0B-9CHoHSy7g@mail.gmail.com>
References: <CAPaL=UV9ytoDc-0U148QSbtq=QHFAY1N=nV_1h_dRW12F6YVhA@mail.gmail.com>
	<201307290517.54624.luke@dashjr.org>
	<CAJHLa0Oe4YT+DnEiVxN_tykMQ8YPtyKTf3K7kb0B-9CHoHSy7g@mail.gmail.com>
Message-ID: <20130729074131.GA23180@savin>

On Mon, Jul 29, 2013 at 02:00:10AM -0400, Jeff Garzik wrote:
> On Mon, Jul 29, 2013 at 1:17 AM, Luke-Jr <luke at dashjr.org> wrote:
> > On Sunday, July 28, 2013 7:39:08 PM John Dillon wrote:
> >> What are your thoughts on creating a whitelist for specific opcodes that
> >> would apply to scripts serialized using P2SH, retaining the existing
> >> standard whitelist for scriptPubKeys? (I would still recommend dropping
> >> pay-to-pubkey and pay-to-multisig due to their potential for dumping data
> >> in the UTXO set)
> >
> > This would be reasonable for miners, but for interoperability between wallets,
> > some specific standard forms would still be necessary without a much smarter
> > solver (which would then expand the code required to implement a wallet, which
> > is unfortunate if not entirely necessary).
> 
> Indeed.  Current designs are all based around pattern matching a
> script template.  Satoshi even described lightweight clients as
> needing no script engine at all, only the ability to match patterns.

We're talking about two use-cases here: wallets protected by
authorization tokens for multi-factor security, and allowing funds to be
controlled by oracles that attest that events have happened allowing the
funds to move.

The latter application especially demands a specialized wallet, yet can
only possibly work with non-standard script formats.

IMO bringing the issue of wallet standardization into this discussion is
kinda silly and premature; if you don't want to use those features, then
you're wallet can ignore them. As for the people that are, they can come
up with appropriate standards for their needs.

After all John's suggesting only allowing the loosened IsStandard()
rules within P2SH, so until the txout is spent all *any* wallet sees is
a P2SH address with no information as to what scriptPubKey is needed to
spend it.

-- 
'peter'[:-1]@petertodd.org
00000000000000220b76f98fc9414043f765ec48dba3fb556e096caffbaae8ec
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 490 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20130729/f6500b5f/attachment.sig>
