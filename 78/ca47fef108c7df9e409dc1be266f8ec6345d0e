From: jtimon@monetize.io (=?UTF-8?B?Sm9yZ2UgVGltw7Nu?=)
Date: Mon, 23 Jun 2014 22:15:19 +0200
Subject: [Bitcoin-development] Plans to separate wallet from core
In-Reply-To: <CA+s+GJDVBQVu8yH9jLu_rQmk=dsJuMUctT-iK0zzOJRYgE8k9w@mail.gmail.com>
References: <CAC1+kJNjcPkaHiR8mzofwXE4+4UX5nmxX5Q3rZv37v-K40p1Tw@mail.gmail.com>
	<CA+s+GJDVBQVu8yH9jLu_rQmk=dsJuMUctT-iK0zzOJRYgE8k9w@mail.gmail.com>
Message-ID: <CAC1+kJOQ2uBo2peYKZJyPSQL6qzk6Yu-cF-tPs3GzVS6cAc53w@mail.gmail.com>

On 6/23/14, Wladimir <laanwj at gmail.com> wrote:
> It's least surprising if the wallet works as a SPV client by default.
> Then, users can use it without first setting up a core. Thus the idea
> would be to use P2P primarily.

So first bitcoind will support SPV mode then we separate the wallet?
Are the core and the wallet share any code (say, the p2p messages via
a sub-repo or something)?

> There could be a mode to use a trusted core by RPC for
> mempool/conflicted transaction validation and such. But I'm not sure
> about this - as we've seen, pure-SPV wallets work pretty well. If you
> want it to act as an edge router you can point a SPV wallet at your
> trusted core as well.

I thought we would first separate wallet from core (maintaining the
full-node wallet status) and then implement an optional SPV mode for
the core (and transitively for "qt-wallet", which would support both
full and SPV mode).

> There are no plans for adding Electrum-like functionality to bitcoind.
> There is already Electrum. Let's not reinvent any wheels.

I'm sorry, but I still don't know what Electrum has to do with all this.
Bitcoin companies often like to interface with the network via
bitcoind nodes, what's wrong with their custom wallets consuming some
optional indexes from a bitcoind node their run themselves?
I'm not proposing a "bitcoind-client" similar to a electrum-client. I
thought it was assumed you where still going to run both the core and
the wallet and we just wanted to separate the code for better
modularity. Seriously, Mike also said something about Electrum too and
I'm really lost about what you people mean here.

> It does not need to keep a full chain database. But it needs its own
> record of the chain, headers-only + what concerns the keys in the
> wallet.

Why cannot consume that data from a bitcoind node that always run alongside it?

I still don't get the plan but it feels like it won't look as DRY as I
was expecting...


