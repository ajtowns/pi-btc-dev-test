From: natanael.l@gmail.com (Natanael)
Date: Sun, 8 Mar 2015 09:20:31 +0100
Subject: [Bitcoin-development] bip44 GPG identities - POC demo
In-Reply-To: <54FBA72E.4040308@gk2.sk>
References: <CAKzHBKnh+yzTwXkZXmezRaOkTTnUO4Z1dJnvKjYGnZBKoNQNEQ@mail.gmail.com>
	<54FBA72E.4040308@gk2.sk>
Message-ID: <CAAt2M18eaRTY1mVLRJb7w=jFGiL=edi_7gC5J_9CcKE-3qskEg@mail.gmail.com>

Den 8 mar 2015 02:36 skrev "Pavol Rusnak" <stick at gk2.sk>:
>
> On 07/03/15 16:53, Mem Wallet wrote:
[...]
> I am currently in process of implementing a SignIdentity message for
> TREZOR, which will be used for HTTPS/SSH/etc. logins.
>
> See PoC here:
>
https://github.com/trezor/trezor-emu/commit/9f612c286cc7b8268ebaec4a36757e1c19548717
>
> The idea is to derive the BIP32 path from HTTPS/SSH URI (by hashing it
> and use m/46'/a'/b'/c'/d' where a,b,c,d are first 4*32 bits of the hash)
> and use that to derive the private key. This scheme might work for GPG
> keys (just use gpg://user at host.com for the URI) as well.

Reminds me of FIDO's U2F protocol.

http://fidoalliance.org/specifications
https://www.yubico.com/products/yubikey-hardware/fido-u2f-security-key/

It ties into the browser SSL session to make sure only the correct server
can get the correct response for the challenge-response protocol, so that
credentials phishing is blocked and worthless. A unique keypair is
generated for each service for privacy, so that you can't easily be
identified across services from the usage of the device alone (thus safe
for people with multiple pseudonyms).
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150308/df137ccd/attachment.html>
