From: jgarzik@bitpay.com (Jeff Garzik)
Date: Tue, 17 Jun 2014 17:29:07 -0400
Subject: [Bitcoin-development] Proposal: allocate 8 service bits for
 experimental use
In-Reply-To: <CA+s+GJAgQAZzwgONbD==fYTsV9jWKCZ6+gTiwohUT_H5kT_MoA@mail.gmail.com>
References: <20140617072351.GA7205@savin>
	<CA+s+GJAgQAZzwgONbD==fYTsV9jWKCZ6+gTiwohUT_H5kT_MoA@mail.gmail.com>
Message-ID: <CAJHLa0Mk5E4ubQ2MZcdrG3fAm5KAATKsSgxnN8VKN1W=uBU0Og@mail.gmail.com>

I wrote a patch for string-based name extensions, circa 2011-2012.  I
agree that is preferable to unreadable bits, for reasons you cite.

However, it was noted that extensions (or UUIDs etc.) would not be
propagated around the network in "addr" messages, as service bits are.

On Tue, Jun 17, 2014 at 3:57 AM, Wladimir <laanwj at gmail.com> wrote:
> On Tue, Jun 17, 2014 at 9:23 AM, Peter Todd <pete at petertodd.org> wrote:
>
>> Alternately Wladimir J. van der Laan brought up elsewhere(2) the
>> possibility for a wider notion of an extension namespace. I'm personally
>> not convinced of the short-term need - we've got 64 service bits yet
>> NODE_BLOOM is the first fully fleshed out proposal to use one - but it's
>> worth thinking about for the long term
>
> Yes, as I said in the github topic
> (https://github.com/bitcoin/bitcoin/pull/4351) I suggest we adapt a
> string-based name space for extensions.
>
> A new network version could add a command 'getextensions' to query the
> supported extensions, returning a list of extension strings or
> (extension,version) pairs. For BIPs some something like 'BIP0064'
> could be defined, but for an experiment for example
> 'experimental-getutxo'. This would be easy to implement and specify.
>
> Unlike with the 64 service bits it does not require (as much) central
> coordination to assign as there is no real danger of collisions. It
> takes the political aspect out of P2P network extensions, and gives
> more freedom to alternative implementations to experiment with their
> own extensions. And no more need for bitcoin core to drive what must
> be supported with increasing network versions.
>
> Wladimir
>
> ------------------------------------------------------------------------------
> HPCC Systems Open Source Big Data Platform from LexisNexis Risk Solutions
> Find What Matters Most in Your Big Data with HPCC Systems
> Open Source. Fast. Scalable. Simple. Ideal for Dirty Data.
> Leverages Graph Analysis for Fast Processing & Easy Data Exploration
> http://p.sf.net/sfu/hpccsystems
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/


