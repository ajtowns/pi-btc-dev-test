From: lf-lists@mattcorallo.com (Matt Corallo)
Date: Mon, 27 Nov 2017 11:33:07 -0500
Subject: [bitcoin-dev] Making OP_CODESEPARATOR and FindAndDelete in
 non-segwit scripts non-standard
In-Reply-To: <081A517B-B730-43AB-9D4E-4F696EFD91A3@friedenbach.org>
References: <53A587C3-DAC1-4055-875F-96B61717ACE6@xbt.hk>
	<081A517B-B730-43AB-9D4E-4F696EFD91A3@friedenbach.org>
Message-ID: <56ca1248-6427-46f7-1645-84349cc8facc@mattcorallo.com>

I strongly disagree here - we don't only soft-fork out transactions that
are "fundamentally insecure", that would be significantly too
restrictive. We have generally been willing to soft-fork out things
which clearly fall outside of best-practices, especially rather
"useless" fields in the protocol eg soft-forking behavior into OP_NOPs,
soft-forking behavior into nSequence, etc.

As a part of setting clear best-practices, making things non-standard is
the obvious step, though there has been active discussion of
soft-forking out FindAndDelete and OP_CODESEPARATOR for years now. I
obviously do not claim that we should be proposing a soft-fork to
blacklist FindAndDelete and OP_CODESEPARATOR usage any time soon, and
assume that it would take at least a year or three from when it was made
non-standard to when a soft-fork to finally remove them was proposed.
This should be more than sufficient time for folks using such weird (and
largely useless) parts of the protocol to object, which should be
sufficient to reconsider such a soft-fork.

Independently, making them non-standard is a good change on its own, and
if nothing else should better inform discussion about the possibility of
anyone using these things.

Matt

On 11/15/17 14:54, Mark Friedenbach via bitcoin-dev wrote:
> As good of an idea as it may or may not be to remove this feature from
> the code base, actually doing so?would be crossing a boundary that we
> have not previously been willing to do except under extraordinary
> duress. The nature of bitcoin is such that we do not know and cannot
> know what transactions exist out there pre-signed and making use of
> these features.
> 
> It may be a good idea to make these features non standard to further
> discourage their use, but I object to doing so with the justification of
> eventually disabling them for all transactions. Taking that step has the
> potential of destroying value and is something that we have only done in
> the past either because we didn?t understand forks and best practices
> very well, or because the features (now disabled) were fundamentally
> insecure and resulted in other people?s coins being vulnerable. This
> latter concern does not apply here as far as I?m aware.
> 
> On Nov 15, 2017, at 8:02 AM, Johnson Lau via bitcoin-dev
> <bitcoin-dev at lists.linuxfoundation.org
> <mailto:bitcoin-dev at lists.linuxfoundation.org>> wrote:
> 
>> In?https://github.com/bitcoin/bitcoin/pull/11423?I propose to
>> make?OP_CODESEPARATOR and FindAndDelete in non-segwit scripts non-standard
>>
>> I think FindAndDelete() is one of the most useless and complicated
>> functions in the script language. It is omitted from segwit (BIP143),
>> but we still need to support it in non-segwit scripts. Actually,
>> FindAndDelete() would only be triggered in some weird edge cases like
>> using out-of-range SIGHASH_SINGLE.
>>
>> Non-segwit scripts also use a FindAndDelete()-like function to remove
>> OP_CODESEPARATOR from scriptCode. Note that in BIP143, only executed
>> OP_CODESEPARATOR are removed so it doesn?t have the
>> FindAndDelete()-like function. OP_CODESEPARATOR in segwit scripts are
>> useful for Tumblebit so it is not disabled in this proposal
>>
>> By disabling both, it guarantees that scriptCode serialized inside
>> SignatureHash() must be constant
>>
>> If we use a softfork to remove FindAndDelete() and OP_CODESEPARATOR
>> from non-segwit scripts, we could completely remove FindAndDelete()
>> from the consensus code later by whitelisting all blocks before the
>> softfork block. The first step is to make them non-standard in the
>> next release.
>>
>>
>> ?
>> _______________________________________________
>> bitcoin-dev mailing list
>> bitcoin-dev at lists.linuxfoundation.org
>> <mailto:bitcoin-dev at lists.linuxfoundation.org>
>> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
> 
> _______________________________________________
> bitcoin-dev mailing list
> bitcoin-dev at lists.linuxfoundation.org
> https://lists.linuxfoundation.org/mailman/listinfo/bitcoin-dev
> 
