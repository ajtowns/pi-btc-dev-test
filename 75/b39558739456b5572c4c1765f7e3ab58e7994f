From: tier.nolan@gmail.com (Tier Nolan)
Date: Sun, 12 Jul 2015 00:19:14 +0100
Subject: [bitcoin-dev] Why not Child-Pays-For-Parent?
In-Reply-To: <CAAUFj12JC1e7wY1M-_U_Kh5wQv8V4X0SeGGtONn7m8PcOEhp_Q@mail.gmail.com>
References: <6D3AACE5-D6CD-4785-8A55-F6DF0B94D927@ricmoo.com>
	<CAPWm=eWH9rZpwJeK2tTdHH8+BWDU_Vam8oBtG0u49v2yZuYVfw@mail.gmail.com>
	<CAE-z3OWMpCW51FjwT8409k_10Uj9Zq=H8AVUo5B6PfYBTQ_Axg@mail.gmail.com>
	<201507102110.33706.luke@dashjr.org>
	<CAAmoQf1B1nFfS6ZXOkvoJGTaPpbN_NDwOcwCw30MSbRwooSh4Q@mail.gmail.com>
	<CAAUFj12JC1e7wY1M-_U_Kh5wQv8V4X0SeGGtONn7m8PcOEhp_Q@mail.gmail.com>
Message-ID: <CAE-z3OVLF5whUL_HoP3i5B5mxB_KztBLJSB1dJ=dQ9+UDg55hg@mail.gmail.com>

On Sat, Jul 11, 2015 at 10:30 PM, Dan Bryant <dkbryant at gmail.com> wrote:

> I think a compromise will be somewhere in the middle.  I think most people
> would be OK with TXs that don't have enough fees for P2P transfer to stay
> in deadmans land.  Most people are stuck in a situation where they payed
> enough to get it into (and keep it in) the pool, but not enough to get it
> out.
>

Agreed.  A lot of the functionality could be achieved by a system that
works in most cases.  Even if 100 transaction chains aren't supported, 3-5
transaction chains would give a significant fraction of the desired
functionality.

At the moment, a transaction is only added into the memory pool if it meets
the relay threshold and spends transactions that are either in the memory
pool or in a block.

There is an orphan pool that can store up to 100 orphans.

The same could be done for child pays for parent.  A node could remember
the last 100 transactions (up to 5000 bytes) that were rejected from the
memory pool due to insufficient relay fees.

This allows nodes to send a chain of transactions in a row.  If the child
is sent last, then the parent(s) will be in the unrelayed transaction pool.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20150712/ff0bec33/attachment.html>
