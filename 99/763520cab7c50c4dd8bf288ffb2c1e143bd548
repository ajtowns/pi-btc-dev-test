From: pete@petertodd.org (Peter Todd)
Date: Wed, 23 Apr 2014 11:55:31 -0400
Subject: [Bitcoin-development] Coinbase reallocation to discourage
 Finney attacks
In-Reply-To: <CAPg+sBjY4fTTQqkn6=NyU5Fm-54-CnFRHLdEL=3KsUeXBofTqA@mail.gmail.com>
References: <CANEZrP0szimdFSk23aMfO8p2Xtgfbm6kZ=x3rmdPDFUD73xHMg@mail.gmail.com>
	<5357DD8F.6050308@gmail.com>
	<CAPg+sBjY4fTTQqkn6=NyU5Fm-54-CnFRHLdEL=3KsUeXBofTqA@mail.gmail.com>
Message-ID: <20140423155531.GA32545@savin>

On Wed, Apr 23, 2014 at 05:41:26PM +0200, Pieter Wuille wrote:
> On Wed, Apr 23, 2014 at 5:34 PM, Kevin <kevinsisco61784 at gmail.com> wrote:
> > I have some questions:
> > 1.  How can we work towards solving the double-spending problem?
> 
> We have this awesome technology that solves the double-spending
> problem. It's called a blockchain. Of course, it only works when
> transactions are actually in a block.
> 
> This issue is about double-spending preventing before they're
> confirmed. This is (and has always been) just a best-effort mechanism
> in the network.
> 
> > 2.  Is it possible to "scan" for double-spending and correct it?
> 
> That is what is being proposed here, by introducing a mechanism where
> miners can vote to penalize other miners if they seem to allow (too
> many?) double spends.

Worse, it's a mechanism where miners can vote to penalize other miners
for any reason at all. Nothing in the mechanism requires any proof that
a double-spend happened, nor can it.  Even if you require the simple
"two signatures for same output" mechanism, that just proves the
existance of a second signature, and says nothing at all about whether
or not that signature was ever broadcast on any network.

-- 
'peter'[:-1]@petertodd.org
0000000000000000278031f86c71265f6eaf1fe9ce6cc831dc4f956676a7a7f7
-------------- next part --------------
A non-text attachment was scrubbed...
Name: signature.asc
Type: application/pgp-signature
Size: 685 bytes
Desc: Digital signature
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140423/c189cccd/attachment.sig>
