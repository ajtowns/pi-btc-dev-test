From: jgarzik@bitpay.com (Jeff Garzik)
Date: Fri, 8 Aug 2014 08:15:19 -0400
Subject: [Bitcoin-development] NODE_EXT_SERVICES and advertising related
	services
In-Reply-To: <CANEZrP2UFMDJ+88MU=RTyU4FV_HCHwuHLmd5S9aK2AZ7DJ+j7g@mail.gmail.com>
References: <CAJHLa0Ok6s5xQcMSeLa69adLBXEaicuXqcg45eZrwYtVFbx-dA@mail.gmail.com>
	<CANEZrP2wYcxJhxRRa86Nm9ENtK2SA5VNG-L7f5pHb_W=Ajcj5Q@mail.gmail.com>
	<CA+s+GJD+9qpwFcVfHOCCsFYjmk7A0V=65vG-7jJ6D7jj4Pi_7g@mail.gmail.com>
	<CANEZrP245242JYDBBo72XVmKgEBO96QPjcJi8Jy2Dm_r90n1Bw@mail.gmail.com>
	<CAJHLa0N3xx1QZ==iSLYNsdgkBGoqN34+4eVtukkjn+3SrDhC7A@mail.gmail.com>
	<CANEZrP1mhSodC-ZvkuVKAgHO44bM7QX=RivRDhnDeHOKr8PXqQ@mail.gmail.com>
	<CA+s+GJCbCRQP_w3g-0qtA6K8qrf6ywNfJ9d1367gSTfgCwgU2Q@mail.gmail.com>
	<CANEZrP2UFMDJ+88MU=RTyU4FV_HCHwuHLmd5S9aK2AZ7DJ+j7g@mail.gmail.com>
Message-ID: <CAJHLa0O98nfdiewzk-QV_Xw5ytVjas=pW9s2Gxjik7x+ttZFng@mail.gmail.com>

getutxos is a special case, since we already maintain that index as
part of normal operation.

While I dislike some aspects of getutxos (covered elsewhere), if
merged, it would be more appropriate as a special case to keep
getutxos fully internal to bitcoind for implementation reasons.

On Fri, Aug 8, 2014 at 8:11 AM, Mike Hearn <mike at plan99.net> wrote:
>> Something like `getutxos` or this proposal could be implemented as an
>> external application or script, instead of having to integrate
>> everything into bitcoind.
>
>
> Right, although getutxos needs access to the UTXO set which bitcoind already
> has. An external plugin would have to recalculate it from scratch which
> seems redundant.
>
> However there are many other useful services that could be added in such a
> way, like -txindex or the nLockTime storage facility we talked about the
> other day.
>
>>
>> Bitcoind would need a local interprocess message bus for that
>
>
> Maybe, that feels like it could be overkill though. Probably just something
> like
>
> ./bitcoind -servicecookie=<long random string> -allowextservices=127.0.0.1/8
>
> and then any program can connect to bitcoind as normal, send "registersrv"
> with the cookie and a list of command ids it's interested in, maybe a
> service bit to set, and start receiving those messages wrapped in a new
> structure that gives some kind of client ID (like IP address). So any
> library that can do the basic P2P protocol could then be extended with not
> much code to get a multiplexed stream of messages from different clients.
>
> An additional standalone program can then bridge this mechanism to running a
> shell command for particular messages, though given the history of shell
> based exploits I'd feel safer with something that doesn't do that ....



-- 
Jeff Garzik
Bitcoin core developer and open source evangelist
BitPay, Inc.      https://bitpay.com/


