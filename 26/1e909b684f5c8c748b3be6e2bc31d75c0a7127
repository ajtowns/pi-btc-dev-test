From: joel.kaartinen@gmail.com (Joel Kaartinen)
Date: Sat, 08 Mar 2014 12:37:30 +0200
Subject: [Bitcoin-development] Is this a safe thing to be doing with ECC
 addition? (Oracle protocol)
In-Reply-To: <CA+su7OWx9jrgUJrOH=tg1968vr1G1w7yXjgaRSyYJ0zRBjwpqg@mail.gmail.com>
References: <CA+su7OUMgeWgkMFAmmMEpW3eN=cvU47MKt51idDrmCWEiCb+VQ@mail.gmail.com>
	<531AD080.40501@gmail.com>
	<CA+su7OWx9jrgUJrOH=tg1968vr1G1w7yXjgaRSyYJ0zRBjwpqg@mail.gmail.com>
Message-ID: <531AF2EA.50904@gmail.com>

If both parties insist on seeing a hash of the other party's public key
before they'll show their own public key, they can be sure that the
public key is not chosen based on the public key they themselves presented.

Although, I have to wonder, why not just use multisig?

- Joel

On 08.03.2014 10:51, Edmund Edgar wrote:
> On 8 March 2014 17:10, Alan Reiner <etotheipi at gmail.com
> <mailto:etotheipi at gmail.com>> wrote:
>  
>
>     I create a new keypair, <c_pub> with <c_priv> which I know (it can
>     be any arbitrary key pair).  But I don't give you <c_pub>, I give
>     you  <b_pub> = <c_pub> minus <a_pub> (which I can do because I've
>     seen <a_pub> before doing this). 
>
>     Sure, I don't know the private key for <b_pub>, but it doesn't
>     matter... because what
>
>     <b_pub> + <a_pub> = <c_pub> (mine)
>
>     You have no way to detect this condition, because you don't know
>     what c_pub/c_priv I created, so you can only detect this after
>     it's too late (after I abuse the private key)
>
>
> Thanks Alan and Forrest, that makes sense. So to salvage the situation
> in the original case, we have to make sure the parties exchange their
> public keys first, before they're allowed to see the public keys
> they'll be combining them with. 
>
> -- 
> -- 
> Edmund Edgar
> Founder, Social Minds Inc (KK)
> Twitter: @edmundedgar
> Linked In: edmundedgar
> Skype: edmundedgar
> http://www.socialminds.jp
>
> Reality Keys
> @realitykeys
> ed at realitykeys.com <mailto:ed at realitykeys.com>
> https://www.realitykeys.com
>
>
> ------------------------------------------------------------------------------
> Subversion Kills Productivity. Get off Subversion & Make the Move to Perforce.
> With Perforce, you get hassle-free workflows. Merge that actually works. 
> Faster operations. Version large binaries.  Built-in WAN optimization and the
> freedom to use Git, Perforce or both. Make the move to Perforce.
> http://pubads.g.doubleclick.net/gampad/clk?id=122218951&iu=/4140/ostg.clktrk
>
>
> _______________________________________________
> Bitcoin-development mailing list
> Bitcoin-development at lists.sourceforge.net
> https://lists.sourceforge.net/lists/listinfo/bitcoin-development

-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140308/a1e71327/attachment.html>
