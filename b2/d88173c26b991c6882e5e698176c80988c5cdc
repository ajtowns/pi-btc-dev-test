From: g.rowe@froot.co.uk (Gary Rowe)
Date: Tue, 21 Jan 2014 10:01:55 +0000
Subject: [Bitcoin-development] BIP0039: Final call
In-Reply-To: <300D31FC-FB89-4386-8DD9-F5FA792D0B40@bitsofproof.com>
References: <mailman.423274.1390277261.21953.bitcoin-development@lists.sourceforge.net>
	<300D31FC-FB89-4386-8DD9-F5FA792D0B40@bitsofproof.com>
Message-ID: <CAKm8k+0xa5-b=gjfZmH760TbYaQUVf5fGvVK9Jx5jwBGAvcX4g@mail.gmail.com>

MultiBit here.

>At least Trezor and bitcoinj (Multibit) seems to be going in this way,
>which is 100% of clients which expressed interest in bip39 :-).
>
>slush

We'll be using the BIP39 implementation present in Bitcoinj as slush says.

>Proper Unicode handling is a serious issue however. You don't want
>someone to move from one input method / machine to another and
>suddenly find that their coins are inaccessible, because of an issue
>of decomposed vs. compatibility forms or whatever.

We generate the word list internally (12,18,24) and confirm it is entered
correctly through a retyping operation. This will allow us to detect
character encoding transpositions (e.g. u0032 vs u00a0) and alert the user
before it becomes an issue.

While English is the language of the first word list to be implemented, we
would definitely integrate alternative non-English word lists to make life
easier for the global community. In general the approach would be for the
user to select their language (implying a locale) and then the word list to
be selected from that locale if available with a fallback to English. This
follows the same approach as resource bundles in Java.
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20140121/c576faef/attachment.html>
