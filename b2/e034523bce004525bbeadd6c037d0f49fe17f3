From: allen.piscitello@gmail.com (Allen Piscitello)
Date: Sat, 2 Nov 2013 20:19:51 -0500
Subject: [Bitcoin-development] Message Signing based authentication
In-Reply-To: <201311030033.56983.luke@dashjr.org>
References: <20131102050144.5850@gmx.com> <527573DA.7010203@monetize.io>
	<CAJfRnm6Jbm+6__zgvodAroDWRugyX_4atHH1k4+U9_1-GLThjw@mail.gmail.com>
	<201311030033.56983.luke@dashjr.org>
Message-ID: <CAJfRnm6eRRF1ZxRJ89enPNkaG3-BNyboP9DujmuBgQxNhdhU8g@mail.gmail.com>

I actually had a use case in my case where it was possible, and that was
the check I used to get around it, just configured it so that I always
generated a new key when I needed to set up a 2 of 2 Multisig Refund Tx.
 It was either that or making sure I had no unspent outputs.  The use case
of doing it was laziness in just creating a single key.


On Sat, Nov 2, 2013 at 7:33 PM, Luke-Jr <luke at dashjr.org> wrote:

> On Sunday, November 03, 2013 12:29:28 AM Allen Piscitello wrote:
> > This was one of my concerns when implementing a scheme where you sign a
> > refund transaction before the original transaction is broadcast.  I
> > originally tried to pass a hash and have the server sign it.  However, I
> > had no way to know that what I was signing wasn't a transaction that was
> > spending my coins!  So I changed the code to require sending the full
> > transaction, not just the hash.  The other way to mitigate this is
> through
> > not having any unspent outputs from this key.
>
> Well, there's no use case to sign with an address that has already been
> sent
> coins. The main problem with enforcing this is that you can't exactly stop
> someone from sending to an "identity" address.
>
> Luke
>
-------------- next part --------------
An HTML attachment was scrubbed...
URL: <http://lists.linuxfoundation.org/pipermail/bitcoin-dev/attachments/20131102/8c7dc481/attachment.html>
